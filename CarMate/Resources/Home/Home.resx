<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdvantagesService" xml:space="preserve">
    <value>Преимущества сервиса:</value>
  </data>
  <data name="BrandsAzs" xml:space="preserve">
    <value>брендов АЗС</value>
  </data>
  <data name="CommentsAndRatings" xml:space="preserve">
    <value>Комментарии и рейтинг</value>
  </data>
  <data name="ComparisonCars" xml:space="preserve">
    <value>Сравнение своего авто с другими владельцами такого же авто</value>
  </data>
  <data name="DataFromOtherUsers" xml:space="preserve">
    <value>Данные от других пользователей</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Учет затрат на автомобиль, статистика расходов, сравнение показателей</value>
  </data>
  <data name="DisplayFuelPrices" xml:space="preserve">
    <value>Отображение цен на топливо из разных источников</value>
  </data>
  <data name="DisplayOnMap" xml:space="preserve">
    <value>Отображение на карте</value>
  </data>
  <data name="DisseminationData" xml:space="preserve">
    <value>Распространение данных</value>
  </data>
  <data name="FillingData" xml:space="preserve">
    <value>Наполнение данными</value>
  </data>
  <data name="GettingPoiPoints" xml:space="preserve">
    <value>Получение POI точек и показ на карте</value>
  </data>
  <data name="HelpsSaving" xml:space="preserve">
    <value>Помогает экономить</value>
  </data>
  <data name="HowMoneySpent" xml:space="preserve">
    <value>Сколько денег потрачено на содержание автомобиля за текущий год?</value>
  </data>
  <data name="HowWork" xml:space="preserve">
    <value>Как работает?</value>
  </data>
  <data name="MarkAuto" xml:space="preserve">
    <value>марок автомобилей</value>
  </data>
  <data name="MonitoringFuelPrices" xml:space="preserve">
    <value>Мониторинг цен топлива</value>
  </data>
  <data name="PersonalProfile" xml:space="preserve">
    <value>Личный профиль</value>
  </data>
  <data name="PlanningService" xml:space="preserve">
    <value>Планирование и составление графика будущего тех обслуживания</value>
  </data>
  <data name="ProvidingInformationAboutOtherCars" xml:space="preserve">
    <value>Предоставление информации о других авто</value>
  </data>
  <data name="Registration" xml:space="preserve">
    <value>Регистрация</value>
  </data>
  <data name="RememberEvents" xml:space="preserve">
    <value>Запоминание событий связанных с автомобилем и ведение статистики</value>
  </data>
  <data name="RetrievingData" xml:space="preserve">
    <value>Получение данных</value>
  </data>
  <data name="Saving" xml:space="preserve">
    <value>Экономия!</value>
  </data>
  <data name="ShowLocation" xml:space="preserve">
    <value>Показывает местоположение</value>
  </data>
  <data name="ShowPrice" xml:space="preserve">
    <value>Показывает цену</value>
  </data>
  <data name="StoredEvents" xml:space="preserve">
    <value>Сохраняются события</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>CarMate мониторинг цен топлива, бортовой журнал</value>
  </data>
  <data name="WhatProblemsWeSolve" xml:space="preserve">
    <value>Какие проблемы мы решаем?</value>
  </data>
  <data name="WhenNeedMaintenance" xml:space="preserve">
    <value>Когда нужно сделать ТО или поменять масло и другие расходники?</value>
  </data>
  <data name="WhereDesiredNetworkGasStations" xml:space="preserve">
    <value>Где находиться нужная сеть АЗС?</value>
  </data>
  <data name="WhereRefuelCheaperAndFuelFit" xml:space="preserve">
    <value>Где заправиться дешевле и нужным топливом?</value>
  </data>
  <data name="WhyIsThis" xml:space="preserve">
    <value>Зачем это?</value>
  </data>
  <data name="WhyIsThisAnswer" xml:space="preserve">
    <value>Если водитель хочет экономить, мы предоставляем ему инструмент «Веб приложение» и «Длинные руки» в виде мобильного приложения. К этому пользователь добавляет свою мотивацию и в итоге получается ожидаемый результат – экономия.</value>
  </data>
</root>