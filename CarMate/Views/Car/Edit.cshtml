@model CarMate.Cars

@{
    ViewBag.Title = Resources.Car.EditingVehicle;
    var modificationId = 0;
}

<div class="container">

    <h4>
        @ViewBag.Title "@Model.CarModels.CarBrands.Brand - @Model.CarModels.Model -
        @if (Model.ModificationId != null)
        {
            @: @Model.CarModifications.Modification
            modificationId = (int)Model.ModificationId;
        }
        "
    </h4>


    @using (Html.BeginForm("Edit", "Car", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.UserId)

        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.CarModels.BrandId, Resources.Car.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.DropDownList("brandId", null, htmlAttributes: new {@class = "form-control", onchange = "GetModels(this)"}, optionLabel: Resources.Car.SelectBrand)
                    @Html.ValidationMessageFor(model => model.CarModels.BrandId, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group" id="car_model">
                @Html.Action("GetModels")
            </div>

            <div class="form-group" id="car_modification">
                @Html.Action("GetModifications")
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Odometer, Resources.Car.Odometr, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.TextBoxFor(cars => cars.Odometer, null, htmlAttributes: new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.Odometer, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Tank, Resources.Car.Tank, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.TextBoxFor(cars => cars.Tank, null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Tank, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Consumption, Resources.Car.Consumption, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-3">
                    @Html.TextBoxFor(cars => cars.Consumption, null, htmlAttributes: new {@class = "form-control"})
                    @Html.ValidationMessageFor(cars => cars.Consumption, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.FuelCategoryId, Resources.Car.PreferredTypeFuel, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.FuelCategoryId, null, htmlAttributes: new { @class = "form-control" }, optionLabel: Resources.Car.SelectTypeFuel)
                    @Html.ValidationMessageFor(model => model.FuelCategoryId, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.CarTransmissionId, Resources.Car.CarTransmission, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.CarTransmissionId, null, htmlAttributes: new { @class = "form-control" }, optionLabel: Resources.Car.SelectTypeTransmission)
                    @Html.ValidationMessageFor(model => model.CarTransmissionId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.DateBuy, Resources.Car.DateBuy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <div class="input-group" role="group">
                        @Html.TextBoxFor(model => model.DateBuy, "{0:dd.MM.yyyy}", htmlAttributes: new
                        {
                            @class = "form-control"
                            //data_provide = "datepicker",
                            //@Value = Model.DateBuy.Value.ToString("dd.MM.yyyy")
                        })
                        <span class="input-group-addon" onclick=" OpenDatepicker() ">
                            <i class="glyphicon glyphicon-th" id="icon_datepicker"></i>
                        </span>
                        @*@Html.ValidationMessageFor(model => model.DateBuy, "", new {@class = "text-danger"})*@
                    </div>
                </div>
            </div>


            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.Rating, Resources.Car.UserRating, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <div class="rating" id="car_rating">
                        <input name="val" value="@Model.Rating" type="hidden"/>
                    </div>
                    @Html.HiddenFor(model => model.Rating)
                </div>
            </div>

            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.ImgPath, Resources.Car.CarPhoto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="file" value="@Resources.Global.SelectPicture" />
                </div>
            </div>

            <p>
                <input type="submit" value="@Resources.Global.Save" class="btn btn-primary" onclick="CheckVote()"/>
                @Html.ActionLink(Resources.Global.Back, "Details", "User", new { id = Model.UserId }, new { @class = "btn btn-primary" })
            </p>
        </div>
    }
</div>

<script type="text/javascript">
    @* При изенении марки автомобиля подружаем модели *@
    function GetModels(id) {
        var brandId = id.value;
        $("#car_model").load('@(Url.Action("GetModels","Car"))', { "brandId": brandId });
        $("#car_modification").load('@(Url.Action("GetModifications","Car"))', { "modelId": 0 });
    }

    @* При изенении модеои автомобиля подружаем модификации *@
    function GetModifications(id) {
        var modelId = id.value;
        $("#car_modification").load('@(Url.Action("GetModifications","Car"))', { "modelId": modelId });
    }

    // заносим данные в модель
    function CheckVote() {
        $("#Rating").val(($("#vote-rating").text()));
    }

    function OpenDatepicker() {
        $('#DateBuy').datepicker('show');
    }

    $(document).ready(function () {
        // Получаем язык пользователя
        var lang = '@ViewBag.LanguageName';
        // Инициализация календаря
        $('#DateBuy').datepicker({
            format: "dd.mm.yyyy",
            weekStart: 1,
            todayBtn: "linked",
            language: lang,
            autoclose: true,
            todayHighlight: true
        });

        // Инициализация рейтинга
        $("#car_rating").rating({ readOnly: false });

        // При наведении на иконку календаря меняется курсор
        $('#icon_datepicker').mouseenter(function () {
            $(this).css({ cursor: 'default' });
        });

        // При наведении на поле ввода календаря меняется курсор
        $('#DateBuy').mouseenter(function () {
            $(this).css({ cursor: 'default' });
        });

        //var carBrandId = '@(Model.CarModels.CarBrands.Id)';
        var carModelId = '@(Model.CarModels.Id)';
        var carModificationId = '@(modificationId)';

        //alert("carBrandId = " + carBrandId);
        $('#brandId').trigger('change');    // Генерируем событие onchange для выпадающего списка с брендами автомобилей

        // Функция отрабатывает, через секунду
        setTimeout(function () {

            $("#modelId option[value='" + carModelId + "']").attr("selected", "selected");  // Выбираем марку автомобиля с определенным Id
            $('#modelId').trigger('change');    // Генерируем событие onchange для выпадающего списка с марками автомобилей

            // Функция отрабатывает, через секунду
            setTimeout(function () {
                $("#modificationId option[value='" + carModificationId + "']").attr("selected", "selected");    // Выбираем модификацию автомобиля с определенным Id
            }, 1000);
        }, 1000);
    });
</script>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Script/bootstrap-datepicker")
    @Scripts.Render("~/Scripts/rating")
}