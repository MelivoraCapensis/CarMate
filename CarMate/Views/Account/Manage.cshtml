@model CarMate.Models.LocalPasswordModel
@{
    ViewBag.Title = Resources.Account.AccountManagement;
}

<div class="container">
    <hgroup>
        <h1>@ViewBag.Title.</h1>
    </hgroup>

    <h3>@ViewBag.StatusMessage</h3>

    @*<p>
        @Resources.Account.YouLoggedAs <strong>@User.Identity.Name</strong>.
    </p>*@

    @if (ViewBag.HasLocalPassword)
    {
        @Html.Partial("_ChangePasswordPartial")
    }
    else
    {
        @Html.Partial("_SetPasswordPartial")
    }

    <section>
        @Html.Action("RemoveExternalLogins")


        @Html.Action("ExternalLoginsList", new {ReturnUrl = ViewBag.ReturnUrl})
    </section>

    <div class="row">
        <div class="col-lg-10 col-md-10">
            <div class="panel panel-default">
                <div class="panel-heading">Изменение единиц расхода топлива</div>
                <div class="panel-body">

                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.Label("UnitFuelConsumption", Resources.Account.FuelConsumption, htmlAttributes: new {@class = "control-label col-md-2"})
                            <div class="col-md-3">
                                @Html.DropDownList("UnitFuelConsumption", null, htmlAttributes: new {@class = "form-control"})
                            </div>
                        </div>
                    </div>
                    <button id="btSave" class="col-md-offset-2 btn btn-primary">@Resources.Global.Save</button>

                </div>
                <div class="panel-footer">
                    Единицы измерения для расстояния (одометр) и объема (объем бака) изменятся автоматически.
                </div>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-lg-10 col-md-10">
            <div class="panel panel-danger">
                <div class="panel-heading">
                    <h3 class="panel-title">Удаление аккаунта</h3>
                </div>
                <div class="panel-body">
                    <p>
                        Внимание! Как только вы удалите свой аккаунт, восстановить его будет невозможно!
                    </p>

                    <button id="btDeleteAccount" onclick=" DeleteAccount() " class="btn btn-danger">Удалить аакаунт</button>
                </div>
            </div>
        </div>
    </div>

</div>

<script type="text/javascript">
    $(document).ready(function() {
        $('#btSave').click(function() {
            save();
        });
    });

    function save() {
        //var unitDistanceId = $("#UnitDistanceId").val();
        //var unitVolumeId = $("#UnitVolumeId").val();
        var unitFuelConsumptionId = $("#UnitFuelConsumption").val();
        //alert(unitFuelConsumptionId);

        //var text = $("#UnitFuelConsumptionId option:selected").text();
        //alert(text);
        //alert(unitFuelConsumptionId);
        //alert(unitDistanceId);
        $.ajax({
            url: '@Url.Action("Edit", "User")',
            dataType: "json",
            type: "POST",
            contentType: 'application/json; charset=utf-8',
            //url: '/api/1/user/buyer_profile/',
            //url: '/api/1/user/buyer_profile/' + User.id() + '/',
            //data: { "carEvents": {} },
            //data: JSON.stringify({ unitDistanceId: unitDistanceId, unitVolumeId: unitVolumeId }),
            data: JSON.stringify({ unitFuelConsumptionId: unitFuelConsumptionId }),
            async: true,
            processData: false,
            cache: false,
            success:
                function(data) {
                    alert(data);
                },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("Произошла ошибка при изменении единиц измерения");
                //alert(xhr.status);
                //alert(thrownError);
                //alert(xhr.responseText);
            }
        });
    }

    function DeleteAccount() {
        $.ajax({
            url: '@Url.Action("DeleteAccount", "Account")',
            dataType: "json",
            type: "POST",
            contentType: 'application/json; charset=utf-8',
            //url: '/api/1/user/buyer_profile/',
            //url: '/api/1/user/buyer_profile/' + User.id() + '/',
            //data: { "carEvents": {} },
            //data: JSON.stringify({ unitDistanceId: unitDistanceId, unitVolumeId: unitVolumeId }),
            async: true,
            processData: false,
            cache: false,
            success:
                function(data) {
                    var url = '@Url.Action("Index", "Home")';
                window.location.href = url;
            },
            error: function(xhr, ajaxOptions, thrownError) {
                //alert(xhr.status);
                //alert(thrownError);
                //alert(xhr.responseText);
            }
        });
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}