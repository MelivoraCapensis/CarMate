@model CarMate.Models.RegisterModel

@*<div>
    <!-- Модальное окно -->
    <div class="modal fade" id="register" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button id="registerCloseButton" type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title text-center" id="myModalLabel">Регистрация</h4>
                </div>
                <div class="modal-body">*@
                    @using (Html.BeginForm("Register", "Account", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        @*<hr/>*@
                        @Html.ValidationSummary(true, "", new {@class = "text-danger"})

                        <div class="form-horizontal">
                            <div class="form-group">
                                @Html.LabelFor(model => model.UserName, Resources.Account.Login, htmlAttributes: new {@class = "control-label col-md-4"})
                                <div class="col-lg-5 col-md-5">
                                    @Html.TextBoxFor(model => model.UserName, htmlAttributes: new {@class = "form-control"})
                                    @Html.ValidationMessageFor(model => model.UserName, "", new {@class = "text-danger"})
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Password, Resources.Account.Password, htmlAttributes: new {@class = "control-label col-md-4"})
                                <div class="col-lg-5 col-md-5">
                                    @Html.PasswordFor(model => model.Password, htmlAttributes: new {@class = "form-control"})
                                    @Html.ValidationMessageFor(model => model.Password, "", new {@class = "text-danger"})
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ConfirmPassword, Resources.Account.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-lg-5 col-md-5">
                                    @Html.PasswordFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new {@class = "text-danger"})
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, Resources.Account.Email, htmlAttributes: new {@class = "control-label col-md-4"})
                                <div class="col-lg-5 col-md-5">
                                    @Html.TextBoxFor(model => model.Email, htmlAttributes: new {@class = "form-control"})
                                    @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.UnitFuelConsumptionId, Resources.Account.UnitFuelConsumption, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-lg-5 col-md-5">
                                    @Html.DropDownListFor(model => model.UnitFuelConsumptionId, null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.UnitFuelConsumptionId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @*<div class="form-group">
                                <label class="control-label col-md-4" for="file">Выберите аватар</label>
                                <div class="col-md-5">
                                    <input type="file" name="file" value="Выбрать картинку"/>
                                </div>
                            </div>*@

                            <div class="form-group">
                                <div class="col-lg-offset-1 col-md-offset-1 col-lg-10 col-md-10">
                                    <input type="submit" value="@Resources.Global.SignUp" class="btn btn-primary btn-lg btn-block" />
                                </div>
                            </div>

                            @*<button id="loginInRegister" type="button" class="btn btn-info btn-lg">
                                Вход
                            </button>*@
                            <div class="form-group">
                                <div class="col-lg-offset-2 col-md-offset-2 col-lg-8 col-md-8">
                                    <a id="loginInRegister">@Resources.Global.SignIn</a>
                                </div>
                            </div>
                        </div>
                    }

@*<h2>Use another service to log in.</h2>*@
<div class="col-lg-offset-3 col-md-offset-3">
    @Html.Action("ExternalLoginsList", "Account", new {ReturnUrl = ViewBag.ReturnUrl})
</div>
      @*              @Html.Action("ExternalLoginsList", "Account", new { ReturnUrl = ViewBag.ReturnUrl })*@

                @*</div>
            </div>
        </div>
    </div>
</div>*@

@*<script type="text/javascript">
    $(document).ready(function () {
        $('#loginInRegister').click(function () {    // При нажатии на кнопку входа в окне регистрации
            $('#registerCloseButton').trigger('click');    // Закрываем окно регистрации
            $('#loginButton').trigger('click');    // Открываем окно входа
        });
    });
</script>*@