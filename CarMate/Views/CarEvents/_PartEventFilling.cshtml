@model CarMate.CarEvents

@*<h2>Заправка</h2>*@

<div class="form-group">
    @Html.LabelFor(events => events.FuelCategoryId, Resources.CarEvents.FuelType, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-3">
        @Html.DropDownList("FuelCategoryId", null, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.FuelCategoryId, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(events => events.FuelCount, Resources.CarEvents.FuelCount, htmlAttributes: new {@class = "control-label col-md-2"})
    <div class="col-md-3">
        @Html.TextBoxFor(model => model.FuelCount, htmlAttributes: new { @class = "form-control"})
        @Html.ValidationMessageFor(model => model.FuelCount, "", new {@class = "text-danger"})
    </div>
</div>

<div class="form-group">
    @{
        string price = Resources.CarEvents.PricePerLitr  + ViewBag.UnitVolume;
    }
    @Html.LabelFor(events => events.PricePerLitr, price, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-3">
        @Html.TextBoxFor(model => model.PricePerLitr, htmlAttributes: new {@class = "form-control"})
        @Html.ValidationMessageFor(model => model.PricePerLitr, "", new {@class = "text-danger"})
    </div>
</div>


<div class="form-group">
    @Html.LabelFor(events => events.IsFullTank, Resources.CarEvents.FullTank, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-3">
        @Html.CheckBoxFor(model => model.IsFullTank, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.IsFullTank, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(events => events.IsMissedFilling, Resources.CarEvents.MissedFilling, htmlAttributes: new {@class = "control-label col-md-2"})
    <div class="col-md-3">
        @Html.CheckBoxFor(model => model.IsMissedFilling, htmlAttributes: new {@class = "form-control"})
        @Html.ValidationMessageFor(model => model.IsMissedFilling, "", new {@class = "text-danger"})
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        // При изменении в поле "Залито топлива"
        $('#FuelCount').keyup(function () {
            // Получаем данные из поля FuelCount (количество залитого топлива)
            var fuelCount = $('#FuelCount').val();
            // Если FuelCount (Залито топлива) не число - выходим
            if (!$.isNumeric(fuelCount)) {
                return;
            }
            // Получаем данные из поля PricePerLitr (цена за литр)
            var pricePerLitr = $('#PricePerLitr').val();
            // Если PricePerLitr (цена за литр) не число - выходим
            //if (!$.isNumeric(pricePerLitr)) {
            //    return;
            //}

            // Получаем данные из поля CostTotal (общая стоимость)
            var costTotal = $('#CostTotal').val();
            // Если PricePerLitr (цена за литр) и CostTotal (общая стоимость) не число - выходим
            if (!$.isNumeric(pricePerLitr) && !$.isNumeric(costTotal)) {
                return;
            }
            // Если PricePerLitr (цена за литр) и CostTotal (общая стоимость) ЧИСЛО - выходим
            // Т.к. не знаем какое поле изменять
            //if ($.isNumeric(fuelCount) && $.isNumeric(pricePerLitr)) {
            //    return;
            //}

            if ($.isNumeric(pricePerLitr)) {
                // Считаем общую стоимость
                var costTotalResult = fuelCount * pricePerLitr;
                // Если CostTotal (общая стоимость) не число - выходим
                if (!$.isNumeric(costTotalResult)) {
                    return;
                }
                // Округляем до 2-х знаков, после запятой
                costTotalResult = costTotalResult.toFixed(2);
                // Результат вычисления помещаем в поле CostTotal (общая стоимость)
                $('#CostTotal').val(costTotalResult);
            }

            else if ($.isNumeric(costTotal)) {
                // Считаем цену за литр
                var pricePerLitrResult = costTotal / fuelCount;
                // Если PricePerLitr (цена за литр) не число - выходим
                if (!$.isNumeric(pricePerLitrResult)) {
                    return;
                }
                // Округляем до 2-х знаков, после запятой
                pricePerLitrResult = pricePerLitrResult.toFixed(2);
                // Результат вычисления помещаем в поле PricePerLitr (цена за литр)
                $('#PricePerLitr').val(pricePerLitrResult);
            } 

            
        });

        $('#PricePerLitr').keyup(function () {
            // Получаем данные из поля PricePerLitr (цена за литр)
            var pricePerLitr = $('#PricePerLitr').val();
            // Если PricePerLitr (цена за литр) не число - выходим
            if (!$.isNumeric(pricePerLitr)) {
                return;
            }

            // Получаем данные из поля FuelCount (количество залитого топлива)
            var fuelCount = $('#FuelCount').val();
            // Если FuelCount (количество залитого топлива) не число - выходим
            //if (!$.isNumeric(fuelCount)) {
            //    return;
            //}
            
            // Получаем данные из поля CostTotal (общая стоимость)
            var costTotal = $('#CostTotal').val();
            // Если CostTotal (общая стоимость) и FuelCount (количество залитого топлива) не число - выходим
            if (!$.isNumeric(fuelCount) && !$.isNumeric(costTotal)) {
                return;
            }

            // Если FuelCount (количество залитого топлива) и CostTotal (общая стоимость) ЧИСЛО - выходим
            // Т.к. не знаем какое поле изменять
            //if ($.isNumeric(fuelCount) && $.isNumeric(costTotal)) {
            //    return;
            //}

            if ($.isNumeric(fuelCount)) {
                // Считаем общую стоимость
                var costTotalResult = fuelCount * pricePerLitr;
                // Если CostTotal (общая стоимость) не число - выходим
                if (!$.isNumeric(costTotalResult)) {
                    return;
                }
                // Округляем до 2-х знаков, после запятой
                costTotalResult = costTotalResult.toFixed(2);
                // Результат вычисления помещаем в поле CostTotal (общая стоимость)
                $('#CostTotal').val(costTotalResult);
            }

            else if ($.isNumeric(costTotal)) {
                // Считаем количество залитого топлива
                var fuelCountResult = costTotal / pricePerLitr;

                // Если fuelCount (количество залитого топлива) не число - выходим
                if (!$.isNumeric(fuelCountResult)) {
                    return;
                }
                // Округляем до 2-х знаков, после запятой
                fuelCountResult = fuelCountResult.toFixed(2);

                // Результат вычисления помещаем в поле FuelCount (количество залитого топлива)
                $('#FuelCount').val(fuelCountResult);
            }

            
        });
    });
</script>