@model CarMate.CarEvents

@{
    ViewBag.Title = "Создание события";
}

<h2>@ViewBag.Title</h2>
<div class="container">
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(x => x.CarId)


    <div class="form-horizontal">
        <div class="form-group col-md-12">
            @Html.LabelFor(events => events.DateEvent, "Дата", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-2">
                 @Html.TextBoxFor(model => model.DateEvent, htmlAttributes: new
                    {
                        @class = "form-control",
                        data_provide = "datepicker",
                        @Value = Model.DateEvent.ToString("d")
                    })
                @Html.ValidationMessageFor(model => model.DateEvent, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group col-md-12">
            @Html.LabelFor(events => events.Odometer, "Пробег", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(events => events.Odometer, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Odometer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-12">
            @Html.LabelFor(events => events.CostTotal, "Общая стоимость", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(events => events.CostTotal, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CostTotal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-12">
            @Html.LabelFor(events => events.Comment, "Комментарий", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextAreaFor(model => model.Comment, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(events => events.EventTypeId, "Событие", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownList("EventTypeId", null, htmlAttributes: new { @class = "form-control", onchange = "CarEventsChanged(this)" })
                @Html.ValidationMessageFor(model => model.EventTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-12" id="car_event">
            @Html.Action("GetEvent")
        </div>
        



@*        @Html.Partial("_PartEventFilling")
        @Html.Partial("_PartEventOther")*@



       










        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default"/>
                @Html.ActionLink("Назад", "Index", "CarEvents", new {carId = Model.CarId}, new {@class = "btn btn-default"})
            </div>
        </div>
    </div>
}

</div>
<!-- /class container -->

<script type="text/javascript">
    @* При изенении марки автомобиля подружаем модели *@
    function CarEventsChanged(id) {
        var name = id.text;
        $("#car_event").load('@(Url.Action("GetEvent","CarEvents"))', { "name": "Заправка" });
    }
</script>


@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Script/bootstrap-datepicker")
}