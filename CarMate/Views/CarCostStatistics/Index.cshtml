@using CarMate.Classes
@using Newtonsoft.Json
@model IEnumerable<CarMate.CarEvents>

@{
    ViewBag.Title = "Статистика затрат";
    //// Всего потрачено денег на группы событий (Заправка, ремонт), за определенный период
    //Dictionary<string, double> allCostStatistics = new Dictionary<string, double>();
    //// Всего потрачено денег, за определеный период
    //double allCosts = 0;
    //// Потрачено денег на бензин, за определенный период
    //Dictionary<DateTime, double> fuelCosts = new Dictionary<DateTime, double>();
    //// Потрачено денег на группы событий по месяцам, за определенный период
    //Dictionary<string, double> otherCostStatistics = new Dictionary<string, double>();
    //// Мойка, нет в списке, ремонт, стоянка, страховка, техосмотр, штраф, эвакуатор
    
    //// Получаем названия событий
    //foreach (var eventType in ViewBag.EventTypes)
    //{
    //    allCostStatistics.Add(eventType, 0);
    //    if (!eventType.Equals(Consts.EventTypeNameAzs))
    //    {
    //        otherCostStatistics.Add(eventType, 0);
    //    }
    //}

    //foreach (var carEvent in Model)
    //{
    //    allCostStatistics[carEvent.EventTypes.Name] += carEvent.CostTotal;
    //    if (otherCostStatistics.ContainsKey(carEvent.EventTypes.Name))
    //    {
    //        otherCostStatistics[carEvent.EventTypes.Name] += carEvent.CostTotal;
    //    }
    //    allCosts += carEvent.CostTotal;
    //    if (carEvent.EventTypes.Name.Equals(Consts.EventTypeNameAzs))
    //    {
    //        var result = fuelCosts.FirstOrDefault(x => x.Key.Year == carEvent.DateEvent.Year && x.Key.Month == carEvent.DateEvent.Month);
    //        if (result.Key != DateTime.MinValue)
    //        {
    //            fuelCosts[result.Key] = Math.Round(fuelCosts[result.Key] + carEvent.CostTotal, 2);
    //        }
    //        else
    //        {
    //            fuelCosts.Add(new DateTime(carEvent.DateEvent.Year, carEvent.DateEvent.Month, 1), Math.Round(carEvent.CostTotal, 2));
    //        }
    //    }
    //}
    //var dataKey = allCostStatistics.Keys.ToArray();
    //var dataValue = allCostStatistics.Values.ToArray();

    ////string allCostStatisticsJson = JsonConvert.SerializeObject(allCostStatistics);

    //string dataKeyJson = JsonConvert.SerializeObject(dataKey);
    //string dataValueJson = JsonConvert.SerializeObject(dataValue);

    //List<double> tmpFuelCosts = new List<double>();
    //tmpFuelCosts.AddRange(fuelCosts.Values);
    //string tmpFuelCostsJson = JsonConvert.SerializeObject(tmpFuelCosts.ToArray());

    //List<double> tmpСarwash = new List<double>();
    //foreach (var item in otherCostStatistics)
    //{
    //    if (item.Key.Equals(Consts.EventTypeNameСarwash))
    //    {
    //        tmpСarwash.Add(item.Value);
    //    }
    //}
    
    //string tmpFuelCostsJson = JsonConvert.SerializeObject();
    
    
}

@*<h2>Index</h2>*@
<div class="container">
    <h2>Владелец: "@ViewBag.User.Nickname"</h2>
    <div class="row">
        @Html.Partial("_PartCarInfo", (CarMate.Cars)ViewBag.Car)
        <div class="col-lg-9 col-md-9">
            @Html.Partial("_PartCarMenu")
            <hr/>
            <div id="carContainer">
                @*<div>
                    @using (Html.BeginForm())
                    {
                        @:Период с
                        @Html.TextBox("PeriodStart")
                        @:по
                        @Html.TextBox("PeriodEnd", new
                        {
                            @class = "form-control",
                            data_provide = "datepicker",
                            @Value = DateTime.Now.ToString("dd/MM/yyyy")
                        },null, null)
                    }
                </div>*@

                <p>
                    Денег потрачено за период: <span id="summ_period">0</span> грн.
                </p>


                <div id="allCostStatistics" class="col-lg-12 col-md-12"></div>
                <div id="fuelCostStatistics" class="col-lg-12 col-md-12"></div>
                <div id="otherCostStatistics" class="col-lg-12 col-md-12"></div>

            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    $(document).ready(function() {
        var carId = '@(ViewBag.Car.Id)';

        Highcharts.setOptions({
            lang: {
                months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
                shortMonths: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],
                weekdays: ['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота', 'Воскресенье']
            }
        });

        jQuery.getJSON("CarCostStatistics/GetCostStatistics", { "carId": carId }, function(items) {

            //alert(items[0].AllSumm);
            $('#summ_period').text(items[0].AllSumm);

            // График статистика расходов
            $(function() {
                var dataAll = []; // Создается пустой массив
                jQuery.each(items, function(itemNo, item) {
                    dataAll.push({ name: item.Name, y: item.Summ });
                });

                $('#allCostStatistics').highcharts({
                    chart: {
                        plotBackgroundColor: null,
                        plotBorderWidth: null,
                        plotShadow: false
                    },
                    title: {
                        text: 'Статистика расходов'
                    },
                    subtitle: {
                        text: 'Период: '
                    },
                    tooltip: {
                        headerFormat: '',
                        pointFormat: '<b>{point.name}: {point.percentage:.1f}%</b>'
                    },
                    plotOptions: {
                        pie: {
                            allowPointSelect: true,
                            cursor: 'pointer',
                            dataLabels: {
                                enabled: true,
                                //format: '<b>{point.name}</b>: {point.percentage:.1f} %',
                                format: '<b>{point.name}</b>: {point.y:.2f}грн', // Формат отображаемой надписи, рядом с каждой частью графика
                                style: {
                                    color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                                }
                            }
                        }
                    },
                    series: [
                        {
                            type: 'pie',
                            name: 'Денег потрачено',
                            data: dataAll
                        }
                    ]
                });
            });


            $(function() {
                var dataFuel = []; // Создается пустой массив
                jQuery.each(items, function(itemNo, item) {
                    //if (item.Name === "Заправка") {
                        jQuery.each(item.Details, function(itemNoDetails, itemDetails) {
                            var s = (itemDetails.Ticks - 621355968000000000) / 10000;
                            dataFuel.push({ x: s, y: itemDetails.Cost, color: 'green' });
                        });
                    //}
                });


                // Create the chart
                $('#fuelCostStatistics').highcharts('StockChart', {
                    xAxis: {
                        type: 'datetime',
                        dateTimeLabelFormats: {
                            second: '%d-%m<br/>%Y',
                            minute: '%d-%m<br/>%Y',
                            hour: '%d-%m<br/>%Y',
                            day: '%d-%m<br/>%Y',
                            week: '%d-%m<br/>%Y',
                            month: '%m-%Y',
                            year: '%Y'
                        }
                    },

                    yAxis: {
                        //allowDecimals: false,
                        showFirstLabel: true,
                        showLastLabel: true,
                        //labels: {
                        //    y: 0,
                        //    align: 'left'
                        //},
                        title: {
                            text: 'Деньги (грн)'
                        }
                    },

                    //colors: ['#434348'],

                    //colors: ['#000000', '#434348', '#90ed7d', '#f7a35c', '#8085e9', 
                    //'#f15c80', '#e4d354', '#8085e8', '#8d4653', '#91e8e1'],

                    rangeSelector: {
                        allButtonsEnabled: true,
                        buttons: [
                            {
                                type: 'month',
                                count: 3,
                                text: 'День',
                                dataGrouping: {
                                    forced: true,
                                    units: [['day', [1]]]
                                }
                            }, {
                                type: 'all',
                                text: 'Месяц',
                                dataGrouping: {
                                    forced: true,
                                    units: [['month', [1]]],
                                    // Суммирует все затраты на топливо за месяц
                                    approximation: 'sum'
                                }
                            }, {
                                type: 'all',
                                count: 1,
                                text: 'Год',
                                dataGrouping: {
                                    forced: true,
                                    units: [['year', [1]]],
                                    // Суммирует все затраты на топливо за год
                                    approximation: 'sum'
                                }
                            }
                        ],
                        buttonTheme: {
                            width: 60
                        },
                        selected: 0,
                        // Убрать поля для задания периода
                        inputEnabled: false
                    },

                    title: {
                        text: 'Общие затраты'
                    },

                    series: [
                        {
                            name: 'AAPL Stock Price',
                            data: dataFuel,
                            //[
                            //    [1147651200000, 67.79],
                            //    [1147737600000, 64.98],
                            //    [1147824000000, 65.26],
                            //    [1147910400000, 63.18],
                            //    [1147996800000, 64.51],
                            //    [1148256000000, 63.38],
                            //    [1148342400000, 63.15],
                            //    [1148428800000, 63.34],
                            //    [1148515200000, 64.33],
                            //    [1148601600000, 63.55],
                            //    [1148947200000, 61.22],
                            //    [1149033600000, 59.77]
                            //],
                            marker: {
                                enabled: true,
                                radius: 3
                            },
                            shadow: true,
                            tooltip: {
                                //'<b>' + Highcharts.dateFormat('%A, %b %e, %Y', this.x) + '</b>';
                                headerFormat: '<span style="font-size: 10px">{point.key}</span><br/>',
                                pointFormat:
                                    '<tr><td style="color: {series.color}">Денег потрачено: </td>' +
                                        '<td style="text-align: right"><b>{point.y}грн.</b></td></tr>',
                                valueDecimals: 2
                            }
                        }
                    ]
                });
            });

            $(function() {

                var brandsData = [];
                var drilldownSeries = [];

                jQuery.each(items, function(itemNo, item) {
                    brandsData.push({
                        name: item.Name,
                        y: item.Summ,
                        drilldown: item.Name
                    });

                    var versions = {};
                    $.each(item.Details, function(itemDetailsNo, itemDetails) {
                        if (!versions[item.Name]) {
                            versions[item.Name] = [];
                        }
                        var str = "";
                        if (itemDetails.Month < 10) {
                            str = "0" + itemDetails.Month + "/" + itemDetails.Year;
                        } else {
                            str = itemDetails.Month + "/" + itemDetails.Year;
                        }

                        versions[item.Name].push([str, itemDetails.Cost]);
                    });

                    drilldownSeries.push({
                        name: item.Name,
                        id: item.Name,
                        data: versions[item.Name]
                    });

                });

                Highcharts.setOptions({
                    lang: {
                        drillUpText: 'Назад'
                    }
                });

                $('#otherCostStatistics').highcharts({
                    chart: {
                        type: 'column'
                    },
                    title: {
                        text: 'Другие события'
                    },
                    subtitle: {
                        text: 'Нажмите на колонку, для более подробной статистики'
                    },
                    xAxis: {
                        type: 'category'
                    },
                    yAxis: {
                        title: {
                            text: 'Сумма за выбранный период'
                        }
                    },
                    legend: {
                        enabled: false
                    },
                    plotOptions: {
                        series: {
                            borderWidth: 0,
                            dataLabels: {
                                enabled: true,
                                format: '{point.y:.2f}'
                            }
                        }
                    },

                    tooltip: {
                        headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                        pointFormat: '<span style="color:{point.color}">{point.name}</span>: <b>{point.y:.2f}</b>грн<br/>'
                    },

                    series: [
                        {
                            name: 'Событие',
                            colorByPoint: true,
                            data: brandsData
                        }
                    ],
                    drilldown: {
                        series: drilldownSeries
                    }
                });
            });
        });
    });
</script>

@section scripts {
    <script src="http://code.highcharts.com/stock/highstock.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Script/highcharts")
}