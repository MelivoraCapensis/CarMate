@using CarMate.Classes
@using Newtonsoft.Json
@model IEnumerable<CarMate.CarEvents>

@{
    ViewBag.Title = Resources.CarCostStatistics.CostStatistics;
    //// Всего потрачено денег на группы событий (Заправка, ремонт), за определенный период
    //Dictionary<string, double> allCostStatistics = new Dictionary<string, double>();
    //// Всего потрачено денег, за определеный период
    //double allCosts = 0;
    //// Потрачено денег на бензин, за определенный период
    //Dictionary<DateTime, double> fuelCosts = new Dictionary<DateTime, double>();
    //// Потрачено денег на группы событий по месяцам, за определенный период
    //Dictionary<string, double> otherCostStatistics = new Dictionary<string, double>();
    //// Мойка, нет в списке, ремонт, стоянка, страховка, техосмотр, штраф, эвакуатор
    
    //// Получаем названия событий
    //foreach (var eventType in ViewBag.EventTypes)
    //{
    //    allCostStatistics.Add(eventType, 0);
    //    if (!eventType.Equals(Consts.EventTypeNameAzs))
    //    {
    //        otherCostStatistics.Add(eventType, 0);
    //    }
    //}

    //foreach (var carEvent in Model)
    //{
    //    allCostStatistics[carEvent.EventTypes.Name] += carEvent.CostTotal;
    //    if (otherCostStatistics.ContainsKey(carEvent.EventTypes.Name))
    //    {
    //        otherCostStatistics[carEvent.EventTypes.Name] += carEvent.CostTotal;
    //    }
    //    allCosts += carEvent.CostTotal;
    //    if (carEvent.EventTypes.Name.Equals(Consts.EventTypeNameAzs))
    //    {
    //        var result = fuelCosts.FirstOrDefault(x => x.Key.Year == carEvent.DateEvent.Year && x.Key.Month == carEvent.DateEvent.Month);
    //        if (result.Key != DateTime.MinValue)
    //        {
    //            fuelCosts[result.Key] = Math.Round(fuelCosts[result.Key] + carEvent.CostTotal, 2);
    //        }
    //        else
    //        {
    //            fuelCosts.Add(new DateTime(carEvent.DateEvent.Year, carEvent.DateEvent.Month, 1), Math.Round(carEvent.CostTotal, 2));
    //        }
    //    }
    //}
    //var dataKey = allCostStatistics.Keys.ToArray();
    //var dataValue = allCostStatistics.Values.ToArray();

    ////string allCostStatisticsJson = JsonConvert.SerializeObject(allCostStatistics);

    //string dataKeyJson = JsonConvert.SerializeObject(dataKey);
    //string dataValueJson = JsonConvert.SerializeObject(dataValue);

    //List<double> tmpFuelCosts = new List<double>();
    //tmpFuelCosts.AddRange(fuelCosts.Values);
    //string tmpFuelCostsJson = JsonConvert.SerializeObject(tmpFuelCosts.ToArray());

    //List<double> tmpСarwash = new List<double>();
    //foreach (var item in otherCostStatistics)
    //{
    //    if (item.Key.Equals(Consts.EventTypeNameСarwash))
    //    {
    //        tmpСarwash.Add(item.Value);
    //    }
    //}
    
    //string tmpFuelCostsJson = JsonConvert.SerializeObject();
    
    
}

@*<h2>Index</h2>*@
<div class="container">
    <h2>@Resources.Car.Owner: "@ViewBag.User.Nickname"</h2>
    <div class="row">
        @Html.Partial("_PartCarInfo", (CarMate.Cars)ViewBag.Car)
        <div class="col-lg-9 col-md-9">
            @Html.Partial("_PartCarMenu")
            <hr/>
            <div id="carContainer">
                @*<div>
                    @using (Html.BeginForm())
                    {
                        @:Период с
                        @Html.TextBox("PeriodStart")
                        @:по
                        @Html.TextBox("PeriodEnd", new
                        {
                            @class = "form-control",
                            data_provide = "datepicker",
                            @Value = DateTime.Now.ToString("dd/MM/yyyy")
                        },null, null)
                    }
                </div>*@

                @*<div class="row">
                    <div class="col-lg-7 col-md-7">
                        <div class="input-daterange input-group" id="datepicker_period">
                            <span class="input-group-addon">За период: </span>
                            <span class="input-group-addon">с</span>
                            <input type="text" class="input form-control" name="start" />
                            <span class="input-group-addon">по</span>
                            <input type="text" class="input form-control" name="end" />
                        </div>
                        <button class="btn btn-success" id="search_period">Найти</button>
                    </div>
                </div>*@
                @Html.Partial("_PartPeriod")

                    <div id="period_result"></div>
                    @*<p>
                @Resources.CarCostStatistics.MoneySpentPeriod: <span id="summ_period">0</span> грн.
            </p>*@


                    <div id="allCostStatistics" class="col-lg-12 col-md-12"></div>
                    <div id="fuelCostStatistics" class="col-lg-12 col-md-12"></div>
                    <div id="otherCostStatistics" class="col-lg-12 col-md-12"></div>

                </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        $("#car_rating").rating({ readOnly: true });
    });
</script>


<script type="text/javascript">
    $(document).ready(function() {


        Highcharts.setOptions({
            lang: {
                months: ['@(Resources.Hicharts.January)', '@(Resources.Hicharts.February)', '@(Resources.Hicharts.March)', '@(Resources.Hicharts.April)', '@(Resources.Hicharts.May)', '@(Resources.Hicharts.June)', '@(Resources.Hicharts.July)', '@(Resources.Hicharts.August)', '@(Resources.Hicharts.September)', '@(Resources.Hicharts.October)', '@(Resources.Hicharts.November)', '@(Resources.Hicharts.December)'],
                shortMonths: ['@(Resources.Hicharts.ShortJanuary)', '@(Resources.Hicharts.ShortFebruary)', '@(Resources.Hicharts.ShortMarch)', '@(Resources.Hicharts.ShortApril)', '@(Resources.Hicharts.ShortMay)', '@(Resources.Hicharts.ShortJune)', '@(Resources.Hicharts.ShortJuly)', '@(Resources.Hicharts.ShortAugust)', '@(Resources.Hicharts.ShortSeptember)', '@(Resources.Hicharts.ShortOctober)', '@(Resources.Hicharts.ShortNovember)', '@(Resources.Hicharts.ShortDecember)'],
                weekdays: ['@(Resources.Hicharts.Sunday)', '@(Resources.Hicharts.Monday)', '@(Resources.Hicharts.Tuesday)', '@(Resources.Hicharts.Wednesday)', '@(Resources.Hicharts.Thursday)', '@(Resources.Hicharts.Friday)', '@(Resources.Hicharts.Saturday)'],
                rangeSelectorZoom: "@(Resources.Hicharts.ButtonTitle)"
            }
        });

        getData();
        $('#search_period').click(function() {
            getData();
            
        });
    });

    


    function getData() {
        var startDate = $('input[name=start]').val();
        var endDate = $('input[name=end]').val();
        var carId = '@(ViewBag.Car.Id)';


        $.ajax({
            url: '@Url.Action("GetCostStatisticsFromPeriod", "CarCostStatistics")',
            dataType: "json",
            type: "POST",
            contentType: 'application/json; charset=utf-8',
            //url: '/api/1/user/buyer_profile/',
            //url: '/api/1/user/buyer_profile/' + User.id() + '/',
            //data: { "carEvents": {} },
            data: JSON.stringify({ "carId": carId, "startDate": startDate, "endDate": endDate }),
            //async: true,
            //processData: false,
            //cache: false,
            success:
                function (items) {
                    if (items.length === 0) {
                        $('#period_result').html(
                            '<div class="col-lg-12">' +
                            '<div class="alert alert-danger">' +
                            '@Resources.CarCostStatistics.PeriodEmpty' +
                            '</div>' +
                            '</div>'
                        );

                        $('#allCostStatistics').html('');
                        $('#fuelCostStatistics').html('');
                        $('#otherCostStatistics').html('');
                    } else {
                        //alert(items.length);
                        $('#period_result').html(
                            '<p>' +
                            '@Resources.CarCostStatistics.MoneySpentPeriod: <span id="summ_period">' + items[0].AllSumm + '</span> грн.' +
                            '</p>'
                        );
                        //alert(items[0].AllSumm);
                        //$('#summ_period').text(items[0].AllSumm);

                        // График статистика расходов
                        $(function () {
                            var dataAll = []; // Создается пустой массив
                            jQuery.each(items, function (itemNo, item) {
                                dataAll.push({ name: item.Name, y: item.Summ });
                            });

                            $('#allCostStatistics').highcharts({
                                chart: {
                                    plotBackgroundColor: null,
                                    plotBorderWidth: null,
                                    plotShadow: false
                                },
                                title: {
                                    text: '@(Resources.CarCostStatistics.CostStatistics)'
                                },
                                subtitle: {
                                    text: '@(Resources.Hicharts.Period): '
                                },
                                tooltip: {
                                    headerFormat: '',
                                    pointFormat: '<b>{point.name}: {point.percentage:.1f}%</b>'
                                },
                                plotOptions: {
                                    pie: {
                                        allowPointSelect: true,
                                        cursor: 'pointer',
                                        dataLabels: {
                                            enabled: true,
                                            //format: '<b>{point.name}</b>: {point.percentage:.1f} %',
                                            format: '<b>{point.name}</b>: {point.y:.2f}грн', // Формат отображаемой надписи, рядом с каждой частью графика
                                            style: {
                                                color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                                            }
                                        }
                                    }
                                },
                                series: [
                                    {
                                        type: 'pie',
                                        name: '@(Resources.CarCostStatistics.MoneySpent)',
                                        data: dataAll
                                    }
                                ]
                            });
                        });


                        $(function () {
                            var dataFuel = []; // Создается пустой массив
                            jQuery.each(items, function (itemNo, item) {
                                //if (item.Name === "Заправка") {
                                jQuery.each(item.Details, function (itemNoDetails, itemDetails) {
                                    var s = (itemDetails.Ticks - 621355968000000000) / 10000;
                                    dataFuel.push({ x: s, y: itemDetails.Cost, color: 'green' });
                                });
                                //}
                            });


                            // Create the chart
                            $('#fuelCostStatistics').highcharts('StockChart', {
                                xAxis: {
                                    type: 'datetime',
                                    dateTimeLabelFormats: {
                                        second: '%d-%m<br/>%Y',
                                        minute: '%d-%m<br/>%Y',
                                        hour: '%d-%m<br/>%Y',
                                        day: '%d-%m<br/>%Y',
                                        week: '%d-%m<br/>%Y',
                                        month: '%m-%Y',
                                        year: '%Y'
                                    }
                                },

                                yAxis: {
                                    //allowDecimals: false,
                                    showFirstLabel: true,
                                    showLastLabel: true,
                                    //labels: {
                                    //    y: 0,
                                    //    align: 'left'
                                    //},
                                    title: {
                                        text: '@(Resources.CarCostStatistics.Money) (грн)'
                                    }
                                },

                                //colors: ['#434348'],

                                //colors: ['#000000', '#434348', '#90ed7d', '#f7a35c', '#8085e9',
                                //'#f15c80', '#e4d354', '#8085e8', '#8d4653', '#91e8e1'],

                                rangeSelector: {
                                    allButtonsEnabled: true,
                                    buttons: [
                                        {
                                            type: 'month',
                                            count: 3,
                                            text: '@(Resources.Hicharts.Day)',
                                            dataGrouping: {
                                                forced: true,
                                                units: [['day', [1]]]
                                            }
                                        }, {
                                            type: 'all',
                                            text: '@(Resources.Hicharts.Month)',
                                            dataGrouping: {
                                                forced: true,
                                                units: [['month', [1]]],
                                                // Суммирует все затраты на топливо за месяц
                                                approximation: 'sum'
                                            }
                                        }, {
                                            type: 'all',
                                            count: 1,
                                            text: '@(Resources.Hicharts.Year)',
                                            dataGrouping: {
                                                forced: true,
                                                units: [['year', [1]]],
                                                // Суммирует все затраты на топливо за год
                                                approximation: 'sum'
                                            }
                                        }
                                    ],
                                    buttonTheme: {
                                        width: 60
                                    },
                                    selected: 0,
                                    // Убрать поля для задания периода
                                    inputEnabled: false
                                },

                                title: {
                                    text: '@(Resources.CarCostStatistics.TotalCosts)'
                                },

                                series: [
                                    {
                                        //name: 'AAPL Stock Price',
                                        data: dataFuel,
                                        //[
                                        //    [1147651200000, 67.79],
                                        //    [1147737600000, 64.98],
                                        //    [1147824000000, 65.26],
                                        //    [1147910400000, 63.18],
                                        //    [1147996800000, 64.51],
                                        //    [1148256000000, 63.38],
                                        //    [1148342400000, 63.15],
                                        //    [1148428800000, 63.34],
                                        //    [1148515200000, 64.33],
                                        //    [1148601600000, 63.55],
                                        //    [1148947200000, 61.22],
                                        //    [1149033600000, 59.77]
                                        //],
                                        marker: {
                                            enabled: true,
                                            radius: 3
                                        },
                                        shadow: true,
                                        tooltip: {
                                            //'<b>' + Highcharts.dateFormat('%A, %b %e, %Y', this.x) + '</b>';
                                            headerFormat: '<span style="font-size: 10px">{point.key}</span><br/>',
                                            pointFormat:
                                                '<tr><td style="color: {series.color}">@Resources.CarCostStatistics.MoneySpent: </td>' +
                                                    '<td style="text-align: right"><b>{point.y}грн.</b></td></tr>',
                                            valueDecimals: 2
                                        }
                                    }
                                ]
                            });
                        });

                        $(function () {

                            var brandsData = [];
                            var drilldownSeries = [];

                            jQuery.each(items, function (itemNo, item) {
                                brandsData.push({
                                    name: item.Name,
                                    y: item.Summ,
                                    drilldown: item.Name
                                });

                                var versions = {};
                                $.each(item.Details, function (itemDetailsNo, itemDetails) {
                                    if (!versions[item.Name]) {
                                        versions[item.Name] = [];
                                    }
                                    var str = "";
                                    if (itemDetails.Month < 10) {
                                        str = "0" + itemDetails.Month + "/" + itemDetails.Year;
                                    } else {
                                        str = itemDetails.Month + "/" + itemDetails.Year;
                                    }

                                    versions[item.Name].push([str, itemDetails.Cost]);
                                });

                                drilldownSeries.push({
                                    name: item.Name,
                                    id: item.Name,
                                    data: versions[item.Name]
                                });

                            });

                            Highcharts.setOptions({
                                lang: {
                                    drillUpText: '@Resources.CarCostStatistics.Back'
                                }
                            });

                            $('#otherCostStatistics').highcharts({
                                chart: {
                                    type: 'column'
                                },
                                title: {
                                    text: '@Resources.CarCostStatistics.OtherEvents'
                                },
                                subtitle: {
                                    text: '@Resources.CarCostStatistics.PressColumn'
                                },
                                xAxis: {
                                    type: 'category'
                                },
                                yAxis: {
                                    title: {
                                        text: '@Resources.CarCostStatistics.MoneySpent'
                                    }
                                },
                                legend: {
                                    enabled: false
                                },
                                plotOptions: {
                                    series: {
                                        borderWidth: 0,
                                        dataLabels: {
                                            enabled: true,
                                            format: '{point.y:.2f}'
                                        }
                                    }
                                },

                                tooltip: {
                                    headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                                    pointFormat: '<span style="color:{point.color}">{point.name}</span>: <b>{point.y:.2f}</b>грн<br/>'
                                },

                                series: [
                                    {
                                        name: '@Resources.CarCostStatistics.Event',
                                        colorByPoint: true,
                                        data: brandsData
                                    }
                                ],
                                drilldown: {
                                    series: drilldownSeries
                                }
                            });
                        });
                    }
                },
            error: function(xhr, ajaxOptions, thrownError) {
                alert("Ошибка загрузки данных");
                //alert(xhr.status);
                //alert(thrownError);
                //alert(xhr.responseText);
            }
        });

        @*jQuery.getJSON("CarCostStatistics/GetCostStatisticsFromPeriod", { "carId": carId, "startDate": startDate, "endDate": endDate }, function(items) {
            if (items.length === 0) {
                $('#period_result').html(
                    '<div class="col-lg-12">' +
                    '<div class="alert alert-danger">' +
                    '@Resources.CarCostStatistics.PeriodEmpty' +
                    '</div>' +
                    '</div>'
                );

                $('#allCostStatistics').html('');
                $('#fuelCostStatistics').html('');
                $('#otherCostStatistics').html('');
            } else {
                $('#period_result').html(
                    '<p>' +
                    '@Resources.CarCostStatistics.MoneySpentPeriod: <span id="summ_period">' + items[0].AllSumm + '</span> грн.' +
                    '</p>'
                );
                //alert(items[0].AllSumm);
                //$('#summ_period').text(items[0].AllSumm);

                // График статистика расходов
                $(function() {
                    var dataAll = []; // Создается пустой массив
                    jQuery.each(items, function(itemNo, item) {
                        dataAll.push({ name: item.Name, y: item.Summ });
                    });

                    $('#allCostStatistics').highcharts({
                        chart: {
                            plotBackgroundColor: null,
                            plotBorderWidth: null,
                            plotShadow: false
                        },
                        title: {
                            text: '@(Resources.CarCostStatistics.CostStatistics)'
                        },
                        subtitle: {
                            text: '@(Resources.Hicharts.Period): '
                        },
                        tooltip: {
                            headerFormat: '',
                            pointFormat: '<b>{point.name}: {point.percentage:.1f}%</b>'
                        },
                        plotOptions: {
                            pie: {
                                allowPointSelect: true,
                                cursor: 'pointer',
                                dataLabels: {
                                    enabled: true,
                                    //format: '<b>{point.name}</b>: {point.percentage:.1f} %',
                                    format: '<b>{point.name}</b>: {point.y:.2f}грн', // Формат отображаемой надписи, рядом с каждой частью графика
                                    style: {
                                        color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                                    }
                                }
                            }
                        },
                        series: [
                            {
                                type: 'pie',
                                name: '@(Resources.CarCostStatistics.MoneySpent)',
                                data: dataAll
                            }
                        ]
                    });
                });


                $(function() {
                    var dataFuel = []; // Создается пустой массив
                    jQuery.each(items, function(itemNo, item) {
                        //if (item.Name === "Заправка") {
                        jQuery.each(item.Details, function(itemNoDetails, itemDetails) {
                            var s = (itemDetails.Ticks - 621355968000000000) / 10000;
                            dataFuel.push({ x: s, y: itemDetails.Cost, color: 'green' });
                        });
                        //}
                    });


                    // Create the chart
                    $('#fuelCostStatistics').highcharts('StockChart', {
                        xAxis: {
                            type: 'datetime',
                            dateTimeLabelFormats: {
                                second: '%d-%m<br/>%Y',
                                minute: '%d-%m<br/>%Y',
                                hour: '%d-%m<br/>%Y',
                                day: '%d-%m<br/>%Y',
                                week: '%d-%m<br/>%Y',
                                month: '%m-%Y',
                                year: '%Y'
                            }
                        },

                        yAxis: {
                            //allowDecimals: false,
                            showFirstLabel: true,
                            showLastLabel: true,
                            //labels: {
                            //    y: 0,
                            //    align: 'left'
                            //},
                            title: {
                                text: '@(Resources.CarCostStatistics.Money) (грн)'
                            }
                        },

                        //colors: ['#434348'],

                        //colors: ['#000000', '#434348', '#90ed7d', '#f7a35c', '#8085e9',
                        //'#f15c80', '#e4d354', '#8085e8', '#8d4653', '#91e8e1'],

                        rangeSelector: {
                            allButtonsEnabled: true,
                            buttons: [
                                {
                                    type: 'month',
                                    count: 3,
                                    text: '@(Resources.Hicharts.Day)',
                                    dataGrouping: {
                                        forced: true,
                                        units: [['day', [1]]]
                                    }
                                }, {
                                    type: 'all',
                                    text: '@(Resources.Hicharts.Month)',
                                    dataGrouping: {
                                        forced: true,
                                        units: [['month', [1]]],
                                        // Суммирует все затраты на топливо за месяц
                                        approximation: 'sum'
                                    }
                                }, {
                                    type: 'all',
                                    count: 1,
                                    text: '@(Resources.Hicharts.Year)',
                                    dataGrouping: {
                                        forced: true,
                                        units: [['year', [1]]],
                                        // Суммирует все затраты на топливо за год
                                        approximation: 'sum'
                                    }
                                }
                            ],
                            buttonTheme: {
                                width: 60
                            },
                            selected: 0,
                            // Убрать поля для задания периода
                            inputEnabled: false
                        },

                        title: {
                            text: '@(Resources.CarCostStatistics.TotalCosts)'
                        },

                        series: [
                            {
                                //name: 'AAPL Stock Price',
                                data: dataFuel,
                                //[
                                //    [1147651200000, 67.79],
                                //    [1147737600000, 64.98],
                                //    [1147824000000, 65.26],
                                //    [1147910400000, 63.18],
                                //    [1147996800000, 64.51],
                                //    [1148256000000, 63.38],
                                //    [1148342400000, 63.15],
                                //    [1148428800000, 63.34],
                                //    [1148515200000, 64.33],
                                //    [1148601600000, 63.55],
                                //    [1148947200000, 61.22],
                                //    [1149033600000, 59.77]
                                //],
                                marker: {
                                    enabled: true,
                                    radius: 3
                                },
                                shadow: true,
                                tooltip: {
                                    //'<b>' + Highcharts.dateFormat('%A, %b %e, %Y', this.x) + '</b>';
                                    headerFormat: '<span style="font-size: 10px">{point.key}</span><br/>',
                                    pointFormat:
                                        '<tr><td style="color: {series.color}">@Resources.CarCostStatistics.MoneySpent: </td>' +
                                            '<td style="text-align: right"><b>{point.y}грн.</b></td></tr>',
                                    valueDecimals: 2
                                }
                            }
                        ]
                    });
                });

                $(function() {

                    var brandsData = [];
                    var drilldownSeries = [];

                    jQuery.each(items, function(itemNo, item) {
                        brandsData.push({
                            name: item.Name,
                            y: item.Summ,
                            drilldown: item.Name
                        });

                        var versions = {};
                        $.each(item.Details, function(itemDetailsNo, itemDetails) {
                            if (!versions[item.Name]) {
                                versions[item.Name] = [];
                            }
                            var str = "";
                            if (itemDetails.Month < 10) {
                                str = "0" + itemDetails.Month + "/" + itemDetails.Year;
                            } else {
                                str = itemDetails.Month + "/" + itemDetails.Year;
                            }

                            versions[item.Name].push([str, itemDetails.Cost]);
                        });

                        drilldownSeries.push({
                            name: item.Name,
                            id: item.Name,
                            data: versions[item.Name]
                        });

                    });

                    Highcharts.setOptions({
                        lang: {
                            drillUpText: '@Resources.CarCostStatistics.Back'
                        }
                    });

                    $('#otherCostStatistics').highcharts({
                        chart: {
                            type: 'column'
                        },
                        title: {
                            text: '@Resources.CarCostStatistics.OtherEvents'
                        },
                        subtitle: {
                            text: '@Resources.CarCostStatistics.PressColumn'
                        },
                        xAxis: {
                            type: 'category'
                        },
                        yAxis: {
                            title: {
                                text: '@Resources.CarCostStatistics.MoneySpent'
                            }
                        },
                        legend: {
                            enabled: false
                        },
                        plotOptions: {
                            series: {
                                borderWidth: 0,
                                dataLabels: {
                                    enabled: true,
                                    format: '{point.y:.2f}'
                                }
                            }
                        },

                        tooltip: {
                            headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                            pointFormat: '<span style="color:{point.color}">{point.name}</span>: <b>{point.y:.2f}</b>грн<br/>'
                        },

                        series: [
                            {
                                name: '@Resources.CarCostStatistics.Event',
                                colorByPoint: true,
                                data: brandsData
                            }
                        ],
                        drilldown: {
                            series: drilldownSeries
                        }
                    });
                });
            }
        });*@
    }
</script>

<script type="text/javascript">
    $(document).ready(function () {
        // Получаем язык пользователя
        var lang = '@ViewBag.LanguageName';
        // Инициализация календаря
        $('#datepicker_period').datepicker({
            format: "dd.mm.yyyy",
            weekStart: 1,
            todayBtn: "linked",
            clearBtn: true,
            language: lang,
            //autoclose: true,
            todayHighlight: true
        });
    });
</script>

@section scripts {
    <script src="http://code.highcharts.com/stock/highstock.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Script/highcharts")
    @Scripts.Render("~/Scripts/rating")
    @Scripts.Render("~/Script/bootstrap-datepicker")
}