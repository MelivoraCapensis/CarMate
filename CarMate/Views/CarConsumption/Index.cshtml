@using System.Globalization
@using Newtonsoft.Json
@model IEnumerable<CarMate.ViewModel.CarConsumptionViewModel>

@{
    ViewBag.Title = Resources.CarConsumption.FuelConsumption;

    var comsumption = Model.OrderBy(x=>x.NewCarEvent.DateEvent).Select(x => x.Consumption).ToArray();
    string comsumptionJson = JsonConvert.SerializeObject(comsumption);
}

<div class="container">
    <h2>@Resources.Car.Owner: "@ViewBag.User.Nickname"</h2>
    <div class="row">
        @Html.Partial("_PartCarInfo", (CarMate.Cars)ViewBag.Car)
        <div class="col-lg-9 col-md-9">
            @Html.Partial("_PartCarMenu")
            <hr />
            <div id="carContainer">
                @*<h2>@ViewBag.Title</h2>*@

                @*<div class="row">
                    <div class="col-lg-7 col-md-7">
                        <div class="input-daterange input-group" id="datepicker_period">
                            <span class="input-group-addon">За период: </span>
                            <span class="input-group-addon">с</span>
                            <input type="text" class="input form-control" name="start"/>
                            <span class="input-group-addon">по</span>
                            <input type="text" class="input form-control" name="end"/>
                        </div>
                        <button class="btn btn-success" id="search_period">Найти</button>
                    </div>
                </div>*@
                @Html.Partial("_PartPeriod")

                <div id="period_result_fuelConsumption"></div>

                @*@if (Model.Any())
                {
                    <table class="table">
                        <tr>
                            <th>
                                @Resources.CarConsumption.Date
                            </th>

                            <th>
                                @Resources.CarConsumption.Name
                            </th>

                            <th>
                                @Resources.CarConsumption.Odometer
                            </th>

                            <th>
                                @Resources.CarConsumption.FuelConsumption
                            </th>

                            <th>
                                @Resources.CarConsumption.Options
                            </th>
                        </tr>

                        @foreach (var carEvent in Model)
                        {
                            //if (minConsumption == 0)
                            //{
                            //    minConsumption = carEvent.Consumption;
                            //}
                            //if (maxConsumption < carEvent.Consumption)
                            //{
                            //    maxConsumption = carEvent.Consumption;
                            //}


                            <tr style="background: cornflowerblue">
                                <td></td>

                                <td></td>

                                <td></td>

                                <td></td>

                                <td></td>
                            </tr>

                            <tr>
                                <td id="newCarEvent_DateEvent">
                                    @carEvent.NewCarEvent.DateEvent.ToString("dd.MM.yyyy")
                                </td>

                                <td>
                                </td>

                                <td>
                                    <span id="carEvent_Mileage">
                                        @Html.DisplayFor(x => carEvent.Mileage)
                                    </span>
                                     @ViewBag.UnitDistance
                                </td>

                                <td>
                                    <span id="carEvent_Consumption">
                                        @Html.DisplayFor(x => carEvent.Consumption)
                                    </span>
                                     @ViewBag.UnitFuelConsumption
                                </td>

                                <td id="btn_carEvent_NewCarEvent">
                                    @Html.ActionLink(Resources.CarConsumption.GoToEvent, "Details", "CarEvents", new { id = carEvent.NewCarEvent.Id }, new { @class = "btn btn-default" })
                                </td>
                            </tr>

                            <tr>
                                <td id="oldCarEvent_DateEvent">
                                    @carEvent.OldCarEvent.DateEvent.ToString("dd.MM.yyyy")
                                </td>

                                <td>
                                </td>

                                <td></td>

                                <td></td>

                                <td id="btn_carEvent_OldCarEvent">
                                    @Html.ActionLink(@Resources.CarConsumption.GoToEvent, "Details", "CarEvents", new { id = carEvent.OldCarEvent.Id }, new { @class = "btn btn-default" })
                                </td>
                            </tr>
                        }
                    </table>

                    <h4>Расход топлива</h4>
                    <p>
                        @Resources.CarConsumption.Min:
                        <span id="minConsumption">@ViewBag.MinConsumption</span>
                    </p>
                    <p>
                        @Resources.CarConsumption.Avg
                        <span id="avgConsumption">@ViewBag.AvgConsumption</span>
                    </p>
                    <p>
                        @Resources.CarConsumption.Max
                        <span id="maxConsumption">@ViewBag.MaxConsumption</span>
                    </p>
                    

                    <div id="fuelConsamptionHighcharts" class="col-lg-12 col-md-12"></div>
                }
                else
                {
                    <div class="col-lg-12">
                        <div class="alert alert-danger">
                            @Resources.CarConsumption.FillTwoTimes
                        </div>
                    </div>
                }*@
                <div id="fuelConsamptionHighcharts" class="col-lg-12 col-md-12"></div>

                <hr/>

                <div id="period_result"></div>
                @*<p>
                @Resources.CarConsumption.DroveFromPeriod: <span id="distance_period"></span> @ViewBag.UnitDistance.
            </p>*@

                <div id="distanceStatistics" class="col-lg-12 col-md-12"></div>

                <div id="fuelCostStatistics" class="col-lg-12 col-md-12"></div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $("#car_rating").rating({ readOnly: true });
    });
</script>


<script type="text/javascript">
    $(document).ready(function() {
        getFuelConsamptionHighcharts();


    });

    function getFuelConsamptionHighcharts() {
        var json = '@(comsumptionJson)';
        var dataConsumption = JSON.parse(json);

        var arr = new Array(dataConsumption.length);
        for (var j = 0; j < arr.length; j++) {
            arr[j] = '';
        }

        $('#fuelConsamptionHighcharts').highcharts({
            chart: {
                type: 'line'
            },
            title: {
                text: 'Расход топлива'
            },
            subtitle: {
                text: 'Период: '
            },
            xAxis: {
                categories: arr
            },
            yAxis: {
                title: {
                    text: 'Бензин/Газ (л./100км.)'
                }
            },
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: true
                    },
                    enableMouseTracking: false
                }
            },
            series: [
                {
                    name: 'Тип топлива',
                    data: dataConsumption
                }
                //, {
                //    name: 'London',
                //    data: [3.9, 4.2, 5.7, 8.5, 11.9, 15.2, 17.0, 16.6, 14.2, 10.3, 6.6, 4.8]
                //}
            ]
        });
    }
</script>


<script type="text/javascript">
    $(document).ready(function() {
        getData();
        getFuelConsumption();
        $('#search_period').click(function() {
            getData();
            getFuelConsumption();
            getFuelConsamptionHighcharts();
        });
    });

    function getFuelConsumption() {
        var carId = @(ViewBag.CarId);
        var startDate = $('input[name=start]').val();
        var endDate = $('input[name=end]').val();
        $.ajax({
            url: '@Url.Action("GetFuelConsumption", "CarConsumption")',
            dataType: "json",
            type: "POST",
            contentType: 'application/json; charset=utf-8',
            //url: '/api/1/user/buyer_profile/',
            //url: '/api/1/user/buyer_profile/' + User.id() + '/',
            //data: { "carEvents": {} },
            data: JSON.stringify({ "carId": carId, "startDate": startDate, "endDate": endDate }),
            //async: true,
            //processData: false,
            //cache: false,
            success:
                function(data) {
                    if (data.length === 0) {
                        $('#period_result_fuelConsumption').html(
                            '<div class="col-lg-12">' +
                            '<div class="alert alert-danger">' +
                            '@Resources.CarConsumption.FillTwoTimes' +
                            '</div>' +
                            '</div>'
                        );
                        $('#fuelConsamptionHighcharts').html('');
                        $('#distanceStatistics').html('');
                    } else {

                        var table = '<table class="table">' +
                                        '<tr>' +
                                            '<th>' +
                                                '@Resources.CarConsumption.Date' +
                                            '</th>' +
                                            '<th>' +
                                                '@Resources.CarConsumption.Name' +
                                            '</th>' +
                                            '<th>' +
                                                '@Resources.CarConsumption.Odometer' +
                                            '</th>' +
                                            '<th>' +
                                                '@Resources.CarConsumption.FuelConsumption' +
                                            '</th>' +
                                            '<th>' +
                                                '@Resources.CarConsumption.Options' +
                                            '</th>' +
                                        '</tr>';


                        jQuery.each(data, function(itemNo, item) {
                            table += '<tr style="background: cornflowerblue">';
                            table += ' <td></td>';
                            table += ' <td></td>';
                            table += ' <td></td>';
                            table += ' <td></td>';
                            table += ' <td></td>';
                            table += ' </tr>';

                            table += '<tr>';
                            table += '<td id="newCarEvent_DateEvent">';
                            table += item.NewCarEvent.DateEvent;
                            table += '</td>';

                            table += ' <td></td>';

                            table += '<td>';
                            table += '<span id="carEvent_Mileage">';
                            table += item.Mileage;
                            table += '</span>';
                            table += '@ViewBag.UnitDistance';
                            table += '</td>';

                            table += '<td>';
                            table += '<span id="carEvent_Consumption">';
                            table += item.Consumption;
                            table += '</span>';
                            table += '@ViewBag.UnitFuelConsumption';
                            table += '</td>';

                            table += '<td id="btn_carEvent_NewCarEvent">';
                            @*table += '<a class = "btn btn-default" href="@Url.Action("Details", "CarEvents", new {id = @<text>item.NewCarEvent.Id</text>})">@Resources.CarConsumption.GoToEvent</a>';*@
                            @*table += '<a class = "btn btn-default" href="ru/Details/CarEvents/?id=';
                            table += item.NewCarEvent.Id;
                            table +='>@Resources.CarConsumption.GoToEvent</a>';*@
                            table += '</td>';
                            table += '</tr>';

                            table += '<tr>';
                            table += '<td id="oldCarEvent_DateEvent">';
                            table += item.OldCarEvent.DateEvent;
                            table += '</td>';

                            table += ' <td></td>';

                            table += ' <td></td>';

                            table += ' <td></td>';

                            table += '<td id="btn_carEvent_OldCarEvent">';
                            @*table += '<a class = "btn btn-default" href="@Url.Action("Details", "CarEvents", new {id = "item.OldCarEvent.Id"})">@Resources.CarConsumption.GoToEvent</a>';*@
                            table += '</td>';
                            table += '</tr>';
                        });
                        table += '</table>';

                        var consumption = '<p>';
                        consumption += '@Resources.CarConsumption.Min';
                        consumption += '<span id="minConsumption">';
                        consumption += data[0].MinConsumption;
                        consumption += '</span>';
                        @*consumption += '<span id="minConsumption">@ViewBag.MinConsumption</span>';*@
                        consumption += '</p>';

                        consumption += '<p>';
                        consumption += ' @Resources.CarConsumption.Avg';
                        consumption += '<span id="avgConsumption">';
                        consumption += data[0].AvgConsumption;
                        consumption += '</span>';
                        consumption += '</p>';

                        consumption += '<p>';
                        consumption += '@Resources.CarConsumption.Max';
                        consumption += '<span id="maxConsumption">';
                        consumption += data[0].MaxConsumption;
                        consumption += '</span>';
                        consumption += '</p>';

                        var res = table + consumption;

                        $('#period_result_fuelConsumption').html(res);


                        @*'<p>' +
                        '@Resources.CarCostStatistics.MoneySpentPeriod: <span id="summ_period">' + items[0].AllSumm + '</span> грн.' +
                        '</p>'
                        );
                        var min = data[0].MinConsumption;
                        alert(min);
                        $('#minConsumption').val(@(ViewBag.MinConsumption));
                        $('#avgConsumption').val(@(ViewBag.AvgConsumption));
                        $('#maxConsumption').val(@(ViewBag.MaxConsumption));*@

                    }
                },
            error: function(xhr, ajaxOptions, thrownError) {
                alert("Ошибка загрузки данных");
                //alert(xhr.status);
                //alert(thrownError);
                //alert(xhr.responseText);
            }
        });
    }

    function getData() {

        var distance = '@(Resources.CarConsumption.Distance)';
        var mileage = '@(Resources.CarConsumption.Mileage)';
        var startDate = $('input[name=start]').val();
        var endDate = $('input[name=end]').val();
        //alert(startDate);
        //alert(endDate);

        var carId = '@(ViewBag.Car.Id)';

        $.ajax({
            url: '@Url.Action("GetConsumptionFromPeriod", "CarConsumption")',
            dataType: "json",
            type: "POST",
            contentType: 'application/json; charset=utf-8',
            //url: '/api/1/user/buyer_profile/',
            //url: '/api/1/user/buyer_profile/' + User.id() + '/',
            //data: { "carEvents": {} },
            data: JSON.stringify({ "carId": carId, "startDate": startDate, "endDate": endDate }),
            //async: true,
            //processData: false,
            //cache: false,
            success:
                function(data) {
                    if (data.length === 0) {
                        $('#period_result').html(
                            '<div class="col-lg-12">' +
                            '<div class="alert alert-danger">' +
                            '@Resources.CarConsumption.PeriodEmpty' +
                            '</div>' +
                            '</div>'
                        );
                    } else {
                        $('#period_result').html(
                            '<p>' +
                            '@Resources.CarConsumption.DroveFromPeriod: <span id="distance_period">' + data[0].AllDistance + '</span> @ViewBag.UnitDistance.' +
                            '</p>'
                        );
                        //$('#distance_period').text(items[0].AllDistance);

                        $(function () {
                            var dataFuel = []; // Создается пустой массив
                            jQuery.each(data, function (itemNo, item) {
                                var s = (item.Ticks - 621355968000000000) / 10000;
                                dataFuel.push({ x: s, y: item.Distance });
                            });

                            Highcharts.setOptions({
                                lang: {
                                    months: ['@(Resources.Hicharts.January)', '@(Resources.Hicharts.February)', '@(Resources.Hicharts.March)', '@(Resources.Hicharts.April)', '@(Resources.Hicharts.May)', '@(Resources.Hicharts.June)', '@(Resources.Hicharts.July)', '@(Resources.Hicharts.August)', '@(Resources.Hicharts.September)', '@(Resources.Hicharts.October)', '@(Resources.Hicharts.November)', '@(Resources.Hicharts.December)'],
                                    shortMonths: ['@(Resources.Hicharts.ShortJanuary)', '@(Resources.Hicharts.ShortFebruary)', '@(Resources.Hicharts.ShortMarch)', '@(Resources.Hicharts.ShortApril)', '@(Resources.Hicharts.ShortMay)', '@(Resources.Hicharts.ShortJune)', '@(Resources.Hicharts.ShortJuly)', '@(Resources.Hicharts.ShortAugust)', '@(Resources.Hicharts.ShortSeptember)', '@(Resources.Hicharts.ShortOctober)', '@(Resources.Hicharts.ShortNovember)', '@(Resources.Hicharts.ShortDecember)'],
                                    weekdays: ['@(Resources.Hicharts.Sunday)', '@(Resources.Hicharts.Monday)', '@(Resources.Hicharts.Tuesday)', '@(Resources.Hicharts.Wednesday)', '@(Resources.Hicharts.Thursday)', '@(Resources.Hicharts.Friday)', '@(Resources.Hicharts.Saturday)'],
                                    rangeSelectorZoom: "@(Resources.Hicharts.ButtonTitle)"
                                }
                            });

                            //['ShortMonthsJanuary', 'ShortMonthsFebruary', 'ShortMonthsMarch', 'ShortMonthsApril',
                            // 'ShortMonthsMay', 'ShortMonthsJune', 'ShortMonthsJuly', 'ShortMonthsAugust', 'ShortMonthsSeptember',
                            // 'ShortMonthsOctober', 'ShortMonthsNovember', 'ShortMonthsDecember']

                            //['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']

                            // Create the chart
                            $('#distanceStatistics').highcharts('StockChart', {
                                rangeSelector: {
                                    allButtonsEnabled: true,
                                    buttons: [
                                        {
                                            type: 'month',
                                            count: 3,
                                            text: '@(Resources.Hicharts.Day)',
                                            dataGrouping: {
                                                forced: true,
                                                units: [['day', [1]]]

                                            }
                                        }, {
                                            type: 'all',
                                            text: '@(Resources.Hicharts.Month)',
                                            dataGrouping: {
                                                forced: true,
                                                units: [['month', [1]]],
                                                approximation: 'sum' // Суммирует весь пробег за месяц
                                            }
                                        }, {
                                            type: 'all',
                                            count: 1,
                                            text: '@(Resources.Hicharts.Year)',
                                            dataGrouping: {
                                                forced: true,
                                                units: [['year', [1]]],
                                                approximation: 'sum' // Суммирует весь пробег за год
                                            }
                                        }
                                    ],
                                    buttonTheme: {
                                        width: 60
                                    },
                                    selected: 0,
                                    // Убрать поля для задания периода
                                    inputEnabled: false
                                },

                                xAxis: {
                                    type: 'datetime',
                                    dateTimeLabelFormats: {
                                        second: '%d-%m<br/>%Y',
                                        minute: '%d-%m<br/>%Y',
                                        hour: '%d-%m<br/>%Y',
                                        day: '%d-%m<br/>%Y',
                                        week: '%d-%m<br/>%Y',
                                        month: '%m-%Y',
                                        year: '%Y'
                                    }
                                },

                                yAxis: {
                                    //allowDecimals: false,
                                    showFirstLabel: true,
                                    showLastLabel: true,
                                    //labels: {
                                    //    y: 0,
                                    //    align: 'left'
                                    //},
                                    title: {
                                        text: distance + '(@(ViewBag.UnitDistance))'
                                    }
                                },

                                //rangeSelector: {
                                //    selected: 5
                                //},

                                title: {
                                    text: '@(Resources.CarConsumption.Mileage)'
                                },

                                series: [
                                    {
                                        //name: 'AAPL Stock Price',
                                        data: dataFuel,
                                        marker: {
                                            enabled: true,
                                            radius: 3
                                        },
                                        shadow: true,
                                        tooltip: {
                                            //'<b>' + Highcharts.dateFormat('%A, %b %e, %Y', this.x) + '</b>';
                                            headerFormat: '<span style="font-size: 10px">{point.key}</span><br/>',
                                            pointFormat:
                                                '<tr><td style="color: {series.color}">@(Resources.CarConsumption.DistancesDrove): </td>' +
                                                    '<td style="text-align: right"><b>{point.y:.2f}(@(ViewBag.UnitDistance)).</b></td></tr>',
                                            valueDecimals: 2
                                        }
                                    }
                                ]
                            });
                        });
                    }
                },
            error: function(xhr, ajaxOptions, thrownError) {
                alert("Ошибка загрузки данных");
                //alert(xhr.status);
                //alert(thrownError);
                //alert(xhr.responseText);
            }
        });

        @*url: '@Url.Action("GetFuelConsumption", "CarConsumption")',*@
        //jQuery.getJSON("CarConsumption/GetConsumptionFromPeriod", { "carId": carId, "startDate": startDate, "endDate": endDate }, function (items) {
        @*jQuery.getJSON(@Url.Action("GetConsumptionFromPeriod", "CarConsumption"), { carId: carId, startDate: startDate, endDate: endDate }, function (items) {

            if (items.length === 0) {
                $('#period_result').html(
                    '<div class="col-lg-12">' +
                    '<div class="alert alert-danger">' +
                    '@Resources.CarConsumption.PeriodEmpty' +
                    '</div>' +
                    '</div>'
                );
            } else {
                $('#period_result').html(
                    '<p>' +
                    '@Resources.CarConsumption.DroveFromPeriod: <span id="distance_period">' + items[0].AllDistance + '</span> @ViewBag.UnitDistance.' +
                    '</p>'
                );
                //$('#distance_period').text(items[0].AllDistance);

                $(function () {
                    var dataFuel = []; // Создается пустой массив
                    jQuery.each(items, function (itemNo, item) {
                        var s = (item.Ticks - 621355968000000000) / 10000;
                        dataFuel.push({ x: s, y: item.Distance });
                    });

                    Highcharts.setOptions({
                        lang: {
                            months: ['@(Resources.Hicharts.January)', '@(Resources.Hicharts.February)', '@(Resources.Hicharts.March)', '@(Resources.Hicharts.April)', '@(Resources.Hicharts.May)', '@(Resources.Hicharts.June)', '@(Resources.Hicharts.July)', '@(Resources.Hicharts.August)', '@(Resources.Hicharts.September)', '@(Resources.Hicharts.October)', '@(Resources.Hicharts.November)', '@(Resources.Hicharts.December)'],
                            shortMonths: ['@(Resources.Hicharts.ShortJanuary)', '@(Resources.Hicharts.ShortFebruary)', '@(Resources.Hicharts.ShortMarch)', '@(Resources.Hicharts.ShortApril)', '@(Resources.Hicharts.ShortMay)', '@(Resources.Hicharts.ShortJune)', '@(Resources.Hicharts.ShortJuly)', '@(Resources.Hicharts.ShortAugust)', '@(Resources.Hicharts.ShortSeptember)', '@(Resources.Hicharts.ShortOctober)', '@(Resources.Hicharts.ShortNovember)', '@(Resources.Hicharts.ShortDecember)'],
                            weekdays: ['@(Resources.Hicharts.Sunday)', '@(Resources.Hicharts.Monday)', '@(Resources.Hicharts.Tuesday)', '@(Resources.Hicharts.Wednesday)', '@(Resources.Hicharts.Thursday)', '@(Resources.Hicharts.Friday)', '@(Resources.Hicharts.Saturday)'],
                            rangeSelectorZoom: "@(Resources.Hicharts.ButtonTitle)"
                        }
                    });

                    //['ShortMonthsJanuary', 'ShortMonthsFebruary', 'ShortMonthsMarch', 'ShortMonthsApril',
                    // 'ShortMonthsMay', 'ShortMonthsJune', 'ShortMonthsJuly', 'ShortMonthsAugust', 'ShortMonthsSeptember',
                    // 'ShortMonthsOctober', 'ShortMonthsNovember', 'ShortMonthsDecember']

                    //['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']

                    // Create the chart
                    $('#distanceStatistics').highcharts('StockChart', {
                        rangeSelector: {
                            allButtonsEnabled: true,
                            buttons: [
                                {
                                    type: 'month',
                                    count: 3,
                                    text: '@(Resources.Hicharts.Day)',
                                    dataGrouping: {
                                        forced: true,
                                        units: [['day', [1]]]

                                    }
                                }, {
                                    type: 'all',
                                    text: '@(Resources.Hicharts.Month)',
                                    dataGrouping: {
                                        forced: true,
                                        units: [['month', [1]]],
                                        approximation: 'sum' // Суммирует весь пробег за месяц
                                    }
                                }, {
                                    type: 'all',
                                    count: 1,
                                    text: '@(Resources.Hicharts.Year)',
                                    dataGrouping: {
                                        forced: true,
                                        units: [['year', [1]]],
                                        approximation: 'sum' // Суммирует весь пробег за год
                                    }
                                }
                            ],
                            buttonTheme: {
                                width: 60
                            },
                            selected: 0,
                            // Убрать поля для задания периода
                            inputEnabled: false
                        },

                        xAxis: {
                            type: 'datetime',
                            dateTimeLabelFormats: {
                                second: '%d-%m<br/>%Y',
                                minute: '%d-%m<br/>%Y',
                                hour: '%d-%m<br/>%Y',
                                day: '%d-%m<br/>%Y',
                                week: '%d-%m<br/>%Y',
                                month: '%m-%Y',
                                year: '%Y'
                            }
                        },

                        yAxis: {
                            //allowDecimals: false,
                            showFirstLabel: true,
                            showLastLabel: true,
                            //labels: {
                            //    y: 0,
                            //    align: 'left'
                            //},
                            title: {
                                text: distance + '(@(ViewBag.UnitDistance))'
                            }
                        },

                        //rangeSelector: {
                        //    selected: 5
                        //},

                        title: {
                            text: '@(Resources.CarConsumption.Mileage)'
                        },

                        series: [
                            {
                                //name: 'AAPL Stock Price',
                                data: dataFuel,
                                marker: {
                                    enabled: true,
                                    radius: 3
                                },
                                shadow: true,
                                tooltip: {
                                    //'<b>' + Highcharts.dateFormat('%A, %b %e, %Y', this.x) + '</b>';
                                    headerFormat: '<span style="font-size: 10px">{point.key}</span><br/>',
                                    pointFormat:
                                        '<tr><td style="color: {series.color}">@(Resources.CarConsumption.DistancesDrove): </td>' +
                                            '<td style="text-align: right"><b>{point.y:.2f}(@(ViewBag.UnitDistance)).</b></td></tr>',
                                    valueDecimals: 2
                                }
                            }
                        ]
                    });
                });
            }


            //$(function () {
            //    var dataFuelAll = [];
            //    var dataFuel = [];
            //    jQuery.each(items, function (itemNo, item) {
            //        //if (item.Name === "Заправка") {
            //        //jQuery.each(item.Details, function(itemNoDetails, itemDetails) {
            //        var s = (item.Ticks - 621355968000000000) / 10000;
            //        dataFuel.push({ x: s, y: 22 });
            //        //});
            //        //}
            //    });
            //    dataFuelAll.push({ name: 'FuelCount', data: dataFuel });


            //    var dataFuel1 = [];
            //    jQuery.each(items, function (itemNo, item) {
            //        //if (item.Name === "Заправка") {
            //        //jQuery.each(item.Details, function(itemNoDetails, itemDetails) {
            //        var s = (item.Ticks - 621355968000000000) / 10000;
            //        dataFuel1.push({ x: s, y: 33 });
            //        //});
            //        //}
            //    });
            //    dataFuelAll.push({ name: 'CostTotal', data: dataFuel1 });

            //    Highcharts.setOptions({
            //        lang: {
            //            months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
            //            shortMonths: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],
            //            weekdays: ['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота', 'Воскресенье']
            //        }
            //    });
            //    // Create the chart
            //    $('#fuelCostStatistics').highcharts('StockChart', {
            //        rangeSelector: {
            //            allButtonsEnabled: true,
            //            buttons: [
            //                {
            //                    type: 'month',
            //                    count: 3,
            //                    text: 'День',
            //                    dataGrouping: {
            //                        forced: true,
            //                        units: [['day', [1]]]

            //                    }
            //                }, {
            //                    type: 'all',
            //                    text: 'Месяц',
            //                    dataGrouping: {
            //                        forced: true,
            //                        units: [['month', [1]]],
            //                        // Суммирует весь пробег за месяц
            //                        approximation: 'sum'
            //                    }
            //                }, {
            //                    type: 'all',
            //                    count: 1,
            //                    text: 'Год',
            //                    dataGrouping: {
            //                        forced: true,
            //                        units: [['year', [1]]],
            //                        // Суммирует весь пробег за год
            //                        //approximation: 'sum'
            //                        approximation: function (arr) {
            //                            if (arr.length === 0 && arr.hasNulls) {
            //                                return null;
            //                            }
            //                            alert(arr['FuelCount'][0]);


            //                            var sum = 0.;
            //                            $.each(arr, function (i, value) {
            //                                if (sum != null) {
            //                                    sum += value;
            //                                    //alert(value);

            //                                }
            //                            });
            //                            return sum == null ? null : sum / arr.length;
            //                        }
            //                    }
            //                }
            //            ],
            //            buttonTheme: {
            //                width: 60
            //            },
            //            selected: 0,
            //            // Убрать поля для задания периода
            //            inputEnabled: false
            //        },

            //        xAxis: {
            //            type: 'datetime',
            //            dateTimeLabelFormats: {
            //                second: '%d-%m<br/>%Y',
            //                minute: '%d-%m<br/>%Y',
            //                hour: '%d-%m<br/>%Y',
            //                day: '%d-%m<br/>%Y',
            //                week: '%d-%m<br/>%Y',
            //                month: '%m-%Y',
            //                year: '%Y'
            //            }
            //        },

            //        yAxis: {
            //            //allowDecimals: false,
            //            showFirstLabel: true,
            //            showLastLabel: true,
            //            //labels: {
            //            //    y: 0,
            //            //    align: 'left'
            //            //},
            //            title: {
            //                text: 'Расстояние км'
            //            }
            //        },

            //        //rangeSelector: {
            //        //    selected: 5
            //        //},

            //        title: {
            //            text: 'Пробег'
            //        },

            //        series: dataFuelAll
            //        //    [{
            //        //    name: 'AAPL',
            //        //    data: [
            //        //        { y: 1, x: 1147651200000 },
            //        //        { y: 2, x: 1147737600000 },
            //        //        { y: 3, x: 1147824000000 },
            //        //        { y: 4, x: 1147910400000 }
            //        //    ]
            //        //}, {
            //        //    name: 'AAPL',
            //        //    data: [
            //        //        { y: 11, x: 1147651200000 },
            //        //        { y: 12, x: 1147737600000 },
            //        //        { y: 13, x: 1147824000000 },
            //        //        { y: 14, x: 1147910400000 }
            //        //    ]
            //        //}, {
            //        //    name: 'AAPL',
            //        //    data: [
            //        //        { y: 21, x: 1147651200000 },
            //        //        { y: 22, x: 1147737600000 },
            //        //        { y: 23, x: 1147824000000 },
            //        //        { y: 24, x: 1147910400000 }
            //        //    ]
            //        //}]
            //    });
            //});
        });*@
    }
</script>

<script type="text/javascript">
    $(document).ready(function () {
        // Получаем язык пользователя
        var lang = '@ViewBag.LanguageName';
        // Инициализация календаря
        $('#datepicker_period').datepicker({
            format: "dd.mm.yyyy",
            weekStart: 1,
            todayBtn: "linked",
            clearBtn: true,
            language: lang,
            //autoclose: true,
            todayHighlight: true
        });
    });
</script>

@section scripts {
<script src="http://code.highcharts.com/stock/highstock.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Script/highcharts")
    @Scripts.Render("~/Scripts/rating")
    @Scripts.Render("~/Script/bootstrap-datepicker")
}