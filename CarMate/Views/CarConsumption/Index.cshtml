@using System.Globalization
@using Newtonsoft.Json
@model IEnumerable<CarMate.ViewModel.CarConsumptionViewModel>

@{
    ViewBag.Title = "Расход топлива";

    var comsumption = Model.OrderBy(x=>x.NewCarEvent.DateEvent).Select(x => x.Consumption).ToArray();
    string comsumptionJson = JsonConvert.SerializeObject(comsumption);
}

<div class="container">
    <h2>Владелец: "@ViewBag.User.Nickname"</h2>
    <div class="row">
        @Html.Partial("_PartCarInfo", (CarMate.Cars)ViewBag.Car)
        <div class="col-lg-9 col-md-9">
            @Html.Partial("_PartCarMenu")
            <hr />
            <div id="carContainer">
                @*<h2>@ViewBag.Title</h2>*@

                @if (Model.Any())
                {

                    <table class="table">
                        <tr>
                            <th>
                                Дата
                            </th>

                            <th>
                                Название
                            </th>

                            <th>
                                Пробег
                            </th>

                            <th>
                                Расход
                            </th>

                            <th>

                            </th>
                        </tr>

                        @foreach (var carEvent in Model)
                        {
                            //if (minConsumption == 0)
                            //{
                            //    minConsumption = carEvent.Consumption;
                            //}
                            //if (maxConsumption < carEvent.Consumption)
                            //{
                            //    maxConsumption = carEvent.Consumption;
                            //}


                            <tr style="background: cornflowerblue">
                                <td></td>

                                <td></td>

                                <td></td>

                                <td></td>

                                <td></td>
                            </tr>

                            <tr>
                                <td>
                                    @*@Html.DisplayFor(x => carEvent.NewCarEvent.DateEvent)*@
                                    @carEvent.NewCarEvent.DateEvent.ToString("dd/MM/yyyy")
                                </td>

                                <td>
                                    @*@carEvent.NewCarEvent.FuelCategories.category*@
                                    @*Название заправки, тип топлива, перейти к событию, место где произошло событие*@
                                </td>

                                <td>
                                    @Html.DisplayFor(x => carEvent.Mileage)
                                </td>

                                <td>
                                    @Html.DisplayFor(x => carEvent.Consumption)
                                </td>

                                <td>
                                    @Html.ActionLink("К событию", "Details", "CarEvents", new {id = carEvent.NewCarEvent.Id}, new {@class = "btn btn-default"})
                                </td>
                            </tr>

                            <tr>
                                <td>
                                    @*@Html.DisplayFor(x => carEvent.OldCarEvent.DateEvent)*@
                                    @carEvent.OldCarEvent.DateEvent.ToString("dd/MM/yyyy")
                                </td>

                                <td>
                                    @*Название заправки, тип топлива, перейти к событию, место где произошло событие*@
                                </td>

                                <td></td>

                                <td></td>

                                <td>
                                    @Html.ActionLink("К событию", "Details", "CarEvents", new {id = carEvent.OldCarEvent.Id}, new {@class = "btn btn-default"})
                                </td>
                            </tr>
                        }
                    </table>

                    @:Минимальный: @ViewBag.MinConsumption;
                    @:Средний: @ViewBag.AvgConsumption;
                    @:Максимальный: @ViewBag.MaxConsumption;

                    <div id="fuelConsamptionHighcharts" class="col-lg-12 col-md-12"></div>
                }
                else
                {
                    <div class="col-lg-12">
                        <div class="alert alert-danger">
                            Пользоавать еще не запправлял полный бак 2 раза подряд.
                        </div>
                    </div>
                }

                <hr/>
                <p>
                    Проехано, за выбранный период: <span id="distance_period"></span> км.
                </p>

                <div id="distanceStatistics" class="col-lg-12 col-md-12"></div>

                <div id="fuelCostStatistics" class="col-lg-12 col-md-12"></div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        var json = '@(comsumptionJson)';
        var dataConsumption = JSON.parse(json);

        var arr = new Array(dataConsumption.length);
        for (var j = 0; j < arr.length; j++) {
            arr[j] = '';
        }

        $('#fuelConsamptionHighcharts').highcharts({
            chart: {
                type: 'line'
            },
            title: {
                text: 'Расход топлива'
            },
            subtitle: {
                text: 'Период: '
            },
            xAxis: {
                categories: arr
            },
            yAxis: {
                title: {
                    text: 'Бензин/Газ (л./100км.)'
                }
            },
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: true
                    },
                    enableMouseTracking: false
                }
            },
            series: [
                {
                     name: 'Тип топлива',
                     data: dataConsumption
                }
                //, {
                //    name: 'London',
                //    data: [3.9, 4.2, 5.7, 8.5, 11.9, 15.2, 17.0, 16.6, 14.2, 10.3, 6.6, 4.8]
                //}
            ]
        });
    });
</script>


<script type="text/javascript">
    $(document).ready(function() {
        var carId = '@(ViewBag.Car.Id)';

        jQuery.getJSON("CarConsumption/GetConsumptionStatistics", { "carId": carId }, function(items) {

            $('#distance_period').text(items[0].AllDistance);

            $(function() {
                var dataFuel = []; // Создается пустой массив
                jQuery.each(items, function(itemNo, item) {
                    //if (item.Name === "Заправка") {
                    //jQuery.each(item.Details, function(itemNoDetails, itemDetails) {
                    var s = (item.Ticks - 621355968000000000) / 10000;
                    dataFuel.push({ x: s, y: item.Distance });
                    //});
                    //}
                });

                Highcharts.setOptions({
                    lang: {
                        months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
                        shortMonths: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],
                        weekdays: ['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота', 'Воскресенье']
                    }
                });
                // Create the chart
                $('#distanceStatistics').highcharts('StockChart', {
                    rangeSelector: {
                        allButtonsEnabled: true,
                        buttons: [
                            {
                                type: 'month',
                                count: 3,
                                text: 'День',
                                dataGrouping: {
                                    forced: true,
                                    units: [['day', [1]]]
                                    
                                }
                            }, {
                                type: 'all',
                                text: 'Месяц',
                                dataGrouping: {
                                    forced: true,
                                    units: [['month', [1]]],
                                    approximation: 'sum'    // Суммирует весь пробег за месяц
                                }
                            }, {
                                type: 'all',
                                count: 1,
                                text: 'Год',
                                dataGrouping: {
                                    forced: true,
                                    units: [['year', [1]]],
                                    approximation: 'sum'    // Суммирует весь пробег за год
                                }
                            }
                        ],
                        buttonTheme: {
                            width: 60
                        },
                        selected: 0,
                        // Убрать поля для задания периода
                        inputEnabled: false
                    },

                    xAxis: {
                        type: 'datetime',
                        dateTimeLabelFormats: {
                            second: '%d-%m<br/>%Y',
                            minute: '%d-%m<br/>%Y',
                            hour: '%d-%m<br/>%Y',
                            day: '%d-%m<br/>%Y',
                            week: '%d-%m<br/>%Y',
                            month: '%m-%Y',
                            year: '%Y'
                        }
                    },

                    yAxis: {
                        //allowDecimals: false,
                        showFirstLabel: true,
                        showLastLabel: true,
                        //labels: {
                        //    y: 0,
                        //    align: 'left'
                        //},
                        title: {
                            text: 'Расстояние км'
                        }
                    },

                    //rangeSelector: {
                    //    selected: 5
                    //},

                    title: {
                        text: 'Пробег'
                    },

                    series: [
                        {
                            name: 'AAPL Stock Price',
                            data: dataFuel,
                            marker: {
                                enabled: true,
                                radius: 3
                            },
                            shadow: true,
                            tooltip: {
                                //'<b>' + Highcharts.dateFormat('%A, %b %e, %Y', this.x) + '</b>';
                                headerFormat: '<span style="font-size: 10px">{point.key}</span><br/>',
                                pointFormat:
                                    '<tr><td style="color: {series.color}">Расстояния проехано: </td>' +
                                        '<td style="text-align: right"><b>{point.y:.0f}км.</b></td></tr>',
                                valueDecimals: 2
                            }
                        }
                    ]
                });
            });




            //$(function () {
            //    var dataFuelAll = [];
            //    var dataFuel = [];
            //    jQuery.each(items, function (itemNo, item) {
            //        //if (item.Name === "Заправка") {
            //        //jQuery.each(item.Details, function(itemNoDetails, itemDetails) {
            //        var s = (item.Ticks - 621355968000000000) / 10000;
            //        dataFuel.push({ x: s, y: 22 });
            //        //});
            //        //}
            //    });
            //    dataFuelAll.push({ name: 'FuelCount', data: dataFuel });


            //    var dataFuel1 = [];
            //    jQuery.each(items, function (itemNo, item) {
            //        //if (item.Name === "Заправка") {
            //        //jQuery.each(item.Details, function(itemNoDetails, itemDetails) {
            //        var s = (item.Ticks - 621355968000000000) / 10000;
            //        dataFuel1.push({ x: s, y: 33 });
            //        //});
            //        //}
            //    });
            //    dataFuelAll.push({ name: 'CostTotal', data: dataFuel1 });

            //    Highcharts.setOptions({
            //        lang: {
            //            months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
            //            shortMonths: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],
            //            weekdays: ['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота', 'Воскресенье']
            //        }
            //    });
            //    // Create the chart
            //    $('#fuelCostStatistics').highcharts('StockChart', {
            //        rangeSelector: {
            //            allButtonsEnabled: true,
            //            buttons: [
            //                {
            //                    type: 'month',
            //                    count: 3,
            //                    text: 'День',
            //                    dataGrouping: {
            //                        forced: true,
            //                        units: [['day', [1]]]

            //                    }
            //                }, {
            //                    type: 'all',
            //                    text: 'Месяц',
            //                    dataGrouping: {
            //                        forced: true,
            //                        units: [['month', [1]]],
            //                        // Суммирует весь пробег за месяц
            //                        approximation: 'sum'    
            //                    }
            //                }, {
            //                    type: 'all',
            //                    count: 1,
            //                    text: 'Год',
            //                    dataGrouping: {
            //                        forced: true,
            //                        units: [['year', [1]]],
            //                        // Суммирует весь пробег за год
            //                        //approximation: 'sum'    
            //                        approximation: function (arr) {
            //                            if (arr.length === 0 && arr.hasNulls) {
            //                                return null;
            //                            }
            //                            alert(arr['FuelCount'][0]);
                                        

            //                            var sum = 0.;
            //                            $.each(arr, function (i, value) {
            //                                if (sum != null) {
            //                                    sum += value;
            //                                    //alert(value);
                                                
            //                                }
            //                            });
            //                            return sum == null ? null : sum / arr.length;
            //                        }
            //                    }
            //                }
            //            ],
            //            buttonTheme: {
            //                width: 60
            //            },
            //            selected: 0,
            //            // Убрать поля для задания периода
            //            inputEnabled: false
            //        },

            //        xAxis: {
            //            type: 'datetime',
            //            dateTimeLabelFormats: {
            //                second: '%d-%m<br/>%Y',
            //                minute: '%d-%m<br/>%Y',
            //                hour: '%d-%m<br/>%Y',
            //                day: '%d-%m<br/>%Y',
            //                week: '%d-%m<br/>%Y',
            //                month: '%m-%Y',
            //                year: '%Y'
            //            }
            //        },

            //        yAxis: {
            //            //allowDecimals: false,
            //            showFirstLabel: true,
            //            showLastLabel: true,
            //            //labels: {
            //            //    y: 0,
            //            //    align: 'left'
            //            //},
            //            title: {
            //                text: 'Расстояние км'
            //            }
            //        },

            //        //rangeSelector: {
            //        //    selected: 5
            //        //},

            //        title: {
            //            text: 'Пробег'
            //        },

            //        series: dataFuelAll
            //        //    [{
            //        //    name: 'AAPL',
            //        //    data: [
            //        //        { y: 1, x: 1147651200000 },
            //        //        { y: 2, x: 1147737600000 },
            //        //        { y: 3, x: 1147824000000 },
            //        //        { y: 4, x: 1147910400000 }
            //        //    ]
            //        //}, {
            //        //    name: 'AAPL',
            //        //    data: [
            //        //        { y: 11, x: 1147651200000 },
            //        //        { y: 12, x: 1147737600000 },
            //        //        { y: 13, x: 1147824000000 },
            //        //        { y: 14, x: 1147910400000 }
            //        //    ]
            //        //}, {
            //        //    name: 'AAPL',
            //        //    data: [
            //        //        { y: 21, x: 1147651200000 },
            //        //        { y: 22, x: 1147737600000 },
            //        //        { y: 23, x: 1147824000000 },
            //        //        { y: 24, x: 1147910400000 }
            //        //    ]
            //        //}]
            //    });
            //});
        });
    });
</script>



@section scripts {
<script src="http://code.highcharts.com/stock/highstock.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Script/highcharts")
}