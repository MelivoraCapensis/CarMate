@model CarMate.Models.Squirrel
@{
    ViewBag.Title = "Map";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*@*<meta name="viewport" content="width=device-width, initial-scale=1">
<meta name="description" content="">
<meta name="author" content="">*@

<!-- Bootstrap Core CSS -->
<link href="~/bower_components/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- MetisMenu CSS -->
<link href="~/bower_components/metisMenu/dist/metisMenu.min.css" rel="stylesheet">
<!-- Timeline CSS -->
<link href="~/dist/css/timeline.css" rel="stylesheet">
<!-- Custom CSS -->
<link href="~/dist/css/sb-admin-2.css" rel="stylesheet">
<!-- Morris Charts CSS -->
<link href="~/bower_components/morrisjs/morris.css" rel="stylesheet">
<!-- Custom Fonts -->
<link href="~/bower_components/font-awesome/css/font-awesome.min.css" rel="stylesheet" type="text/css">
<link href="~/Content/examples.css" rel="stylesheet" type="text/css">
<!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
<!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
<!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
    <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
<![endif]-->
<style>
    .controls {
        margin-top: 16px;
        border: 1px solid transparent;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        height: 32px;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
    }

    #pac-input {
        background-color: #fff;
        padding: 0 11px 0 13px;
        width: 500px;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        text-overflow: ellipsis;
    }

        #pac-input:focus {
            border-color: #4d90fe;
            margin-left: -1px;
            padding-left: 14px; /* Regular padding-left + 1. */
            width: 401px;
        }

    .pac-container {
        font-family: Roboto;
    }

    #type-selector {
        color: #fff;
        background-color: #4d90fe;
        padding: 5px 11px 0px 11px;
    }

        #type-selector label {
            font-family: Roboto;
            font-size: 13px;
            font-weight: 100;
        }

    /*input, textarea {
        width: 50px;
    }*/
    #locationField, #controls {
        position: relative;
        width: 480px;
      }
      #autocomplete {
        position: absolute;
        top: 0px;
        left: 0px;
        width: 99%;
      }
      .label {
        text-align: right;
        font-weight: bold;
        width: 100px;
        color: #303030;
      }
      #address {
        border: 1px solid #000090;
        background-color: #46b8da;
        width: 480px;
        padding-right: 2px;
      }
      #address td {
        font-size: 10pt;
      }
      .field {
        width: 99%;
      }
      .slimField {
        width: 80px;
      }
      .wideField {
        width: 200px;
      }
      #locationField {
        height: 20px;
        margin-bottom: 2px;
      }

</style>
<div class="container-fluid">
    <div class="row">
        <div class="panel panel-primary">        
            <div class="panel-heading">
                <h3 class="panel-title">Выбор путевых точек по местоположению</h3>       
             </div>        
            <div class="panel-body">
                <div id="poiForm">
                   
                    <table>
                        <tr>
                            <td>
                                @Html.TextBoxFor(c => c.Country, new { @class = "controls", @placeholder = "Введите местоположение", @id = "pac-input" })
                            </td>
                            <td>&nbsp;&nbsp;&nbsp;Или укажите точку на карте вызвав контекстное меню</td>
                        </tr>
                        <tr>
                            <td>@Html.Label("Выберите категорию: ")</td>
                            <td>&nbsp;&nbsp;&nbsp;@Html.DropDownListFor(c => c.Category, new SelectList(Model.PoinCat, "Value", "Text", Model.SeelctedCat), new { @id = "category" })</td>
                        </tr>
                        <tr>
                            <td>@Html.Label("Укажите радиус: ")</td>
                            <td>&nbsp;&nbsp;&nbsp;@Html.DropDownListFor(c => c.Category, new SelectList(Model.RadiusCat, "Value", "Text", Model.SeelctedRad), new { @id = "radius" })</td>
                        </tr>
                    </table>

                    <input type="text" id="latitude" disabled="true" style="display:none;" />
                    <input type="text" id="longitude" disabled="true" style="display:none;" />
                    <table id="address" style="display:none;">
                        <tr>
                            <td class=" label">
                                Адрес
                            </td>
                            <td class="slimField">

                                <input class="field" id="street_number"
                                       disabled="true"></input>
                            </td>
                            <td class="wideField" colspan="2">

                                <input class="field" id="route"
                                       disabled="true"></input>
                            </td>
                        </tr>
                        <tr>
                            <td class="label">Город</td>
                            <td class="wideField" colspan="3">

                                <input class="field" id="locality"
                                       disabled="true"></input>
                            </td>
                        </tr>
                        <tr>
                            <td class="label">Регион</td>
                            <td class="slimField">

                                <input class="field"
                                       id="administrative_area_level_1" disabled="true"></input>
                            </td>
                            <td class="label">Код</td>
                            <td class="wideField">
                                <input class="field" id="postal_code"
                                       disabled="true"></input>
                            </td>

                        </tr>
                        <tr>
                            <td class="label">Страна</td>
                            <td class="wideField" colspan="3">

                                <input class="field"
                                       id="country" disabled="true"></input>
                            </td>
                        </tr>
                    </table>
                    <input id="poi" type="button" value="Загрузить" class="btn btn-primary" />
                </div>
            </div>
        </div>
                            
    </div>
    <div class="row" >            
        <div class="col-md-8">    
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title">Выбор путевых точек по региону</h3>
                </div>
                <div class="panel-body">
                    <div id="regionFrom" class="form-group">
                        <table>
                            <tr>
                                <td>@Html.Partial("_CountriesPartial", Model.CountriesModel)</td>
                            </tr>
                            <tr>
                                <td><div id="regionsDiv"></div></td>
                            </tr>
                            <tr>

                                <td><input id="region" type="button" value="Загрузить" class="btn btn-info" /></td>
                            </tr>                           
                        </table>
                    </div> 
                </div>
            </div>                
        </div>            
        <div class="col-md-4">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-heading">
                        Установите маркер и загрузите кафе
                    </h3>
                </div>
                <div class="panel-body feed">
                    <section class="feed-item">
                        <div class="feed-item-body">
                            <input id="fcafe" type="button" value="Foursquare Кафе" class="btn btn-info" />
                        </div>
                    </section>
                </div>
            </div>
        </div>        
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title">
                        Проложить маршрут и отобразить путевые точки по маршруту
                    </h3>
                </div>
                <div class="panel-body">
                    <div id="routeForm">
                        <table id="control">
                            <tr>
                                <td>
                                    <table>
                                        <tr>
                                            <td>Откуда:</td>
                                            <td>
                                                <input id="startvalue" type="text" style="width: 500px" class="controls"/>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>Куда:</td>
                                            <td><input id="endvalue" type="text" style="width: 500px" class="controls" /></td>
                                        </tr>
                                        <tr>
                                            <td align="left">
                                                <input id="direct" type="button" value="Проложить маршрут" class="btn btn-info" onclick="return Button1_onclick()" />

                                            </td>
                                        </tr>

                                    </table>
                                </td>
                            </tr>
                            <tr>
                                <td valign="top">
                                    <div id="directionpanel" style="height: 200px;width:100%; overflow: auto"></div>
                                </td>
                            </tr>
                        </table>
                        <ul id="instructions" style="height: 100px;width:100%; overflow: auto;display:none;"></ul>
                    </div>
                    <div id="routeMarker">
                        <table>
                            <tr>
                                <td>
                                    <input id="gaspoi" type="button" value="Показать маркеры" class="btn btn-info" />
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.DropDownListFor(c => c.Category, new SelectList(Model.PoinCat, "Value", "Text", Model.SeelctedCat), new { @id = "category_route" })
                                    @Html.DropDownListFor(c => c.Category, new SelectList(Model.RadiusCat, "Value", "Text", Model.SeelctedRad), new { @id = "radius_route" })
                                </td>

                            </tr>
                        </table>

                    </div>
                </div>
            </div>

           
        </div>   
    </div>
    <div class="row">
        <div class="col-xs-12 col-sm-6 col-md-8">
            <div id="map" style="width:100%; height:800px;"></div>
        </div>
        <div class="col-xs-6 col-md-4">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title">Точки интереса</h3>
                </div>
                <div class="panel-body">
                    <ul id="results" style="overflow:scroll; display:block;height:800px" class="list-group"></ul>
                </div>
            </div>         
        </div>
    </div>    
</div>
<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true"></script>
<script src="../gmaps.js"></script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.6.4/jquery.min.js"></script>
<link rel="stylesheet" href="http://twitter.github.com/bootstrap/1.3.0/bootstrap.min.css" />
<script src="http://maps.google.com/maps/api/js?sensor=true"></script>
<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?sensor=false"></script>
<script type="text/javascript" src="https://www.google.com/jsapi"></script>
<script src="http://code.jquery.com/jquery-1.9.1.js"></script>
<script src="http://code.jquery.com/jquery-migrate-1.1.0.js"></script>
<link rel="stylesheet" type="text/css" href="~/Content/examples.css" />
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true&libraries=places"></script>
<script src="https://code.jquery.com/jquery-1.10.2.js"></script>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
<script type="text/javascript">
    var map;
    var items, markers_data = [], markers_chois = [];
    var service, gasInfWin;
    var locpos;
    var image;
    var squirrel;
    var squirrel_data = [];
    var place;
    var placeSearch, autocomplete, autocomplete1,autocomplete2;
    var geocoder = new google.maps.Geocoder();
    var directionsDisplay;
    var directionsService = new google.maps.DirectionsService();
    var aclocation = [], aclocation2 = [], routepath = [];
    var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
    };
    var input1,input2
    //Map
    var countriesDiv = $("#countriesDiv");
    $(document).ready(function () {
        $("#Id").change(function () {
            var id = $("#Id").val();
            var regionsDiv = $("#regionsDiv");
            $.ajax({
                cache: false,
                type: "GET",
                url: "@(Url.RouteUrl("RegionByCountry"))",
                data: { "id": id },
                success: function (data)
                {
                    regionsDiv.html('');
                    regionsDiv.html(data);

                },
                error: function (xhr, ajaxOptions, thrownError)
                {
                    alert('Failed to retrive region');
                }
            });
        });

        map = new GMaps({
            el: '#map',
            lat: 50.450100,
            lng: 30.523989,
            mapTypeControlOptions: {
                mapTypeIds: ["hybrid", "roadmap", "satellite", "terrain", "osm", "cloudmade"]
            }

        });
        //Map Type
        map.addMapType("osm", {
            getTileUrl: function (coord, zoom) {
                return "http://tile.openstreetmap.org/" + zoom + "/" + coord.x + "/" + coord.y + ".png";
            },
            tileSize: new google.maps.Size(256, 256),
            name: "OpenStreetMap",
            maxZoom: 18
        });
        map.setMapTypeId("osm");
        map.on('marker_added', function (marker) {
            var index = map.markers.indexOf(marker);            
            $('#results').append('<li class="list-group-item"><a href="#" class="list-group-item pan-to-marker" data-marker-index="' + index + '">' + marker.infoWindow.content + '</a></li>');
            if (index == map.markers.length - 1) {
                map.fitZoom();
            }
        });
        map.setContextMenu({
            control: 'map',
            options: [{
                title: 'Установить маркер',
                name: 'add_marker',
                action: function (e) {
                    image = new google.maps.MarkerImage("../PlaceMarkers/Nav.png");
                    
                    map.addMarker({
                        lat: e.latLng.lat(),
                        lng: e.latLng.lng(),
                        icon: image,
                        infoWindow: {
                            content: '<p id="lat">' + e.latLng.lat() + '</p><p id="lng">' + e.latLng.lng() + '</p>'

                        }
                    });                 
                    document.getElementById('latitude').value = e.latLng.lat();
                    document.getElementById('longitude').value = e.latLng.lng();
                }
            }
            ]//end map option
        });//end context menu


        directionsDisplay = new google.maps.DirectionsRenderer();
        directionsDisplay.setPanel(document.getElementById('directionpanel'));

        //блок маршрутов

        //autocomplete Google
        input1 = (document.getElementById('startvalue'));
        input2 = (document.getElementById('endvalue'));
        autocomplete1 = new google.maps.places.Autocomplete(input1);
        autocomplete2 = new google.maps.places.Autocomplete(input2);
        autocomplete1.setTypes(['geocode']);
        autocomplete2.setTypes(['geocode']);
        google.maps.event.addListener(autocomplete1, 'place_changed', function () {
            var string = $('#instructions').html();
            string = $('#instructions').html('');
            var place = autocomplete1.getPlace();
            if (!place.geometry) {
                return;
            }
            if (place.geometry.viewport) {
            } else {
                var lat = place.geometry.location.lat();
                var lng = place.geometry.location.lng();
                aclocation = [];
                aclocation.push(lat);
                aclocation.push(lng);
                address = document.getElementById('startvalue').value;
                map.setCenter(place.geometry.location.lat(), place.geometry.location.lng());
                map.addMarker({
                    lat: place.geometry.location.lat(),
                    lng: place.geometry.location.lng(),
                    infoWindow: {
                        content: '<p >' + address + '</p>'

                    }

                });
            }
            var address = '';
            if (place.address_components) {
                address = [
                  (place.address_components[0] && place.address_components[0].short_name || ''),
                  (place.address_components[1] && place.address_components[1].short_name || ''),
                  (place.address_components[2] && place.address_components[2].short_name || '')
                ].join(' ');

            }


        });
        google.maps.event.addListener(autocomplete2, 'place_changed', function () {
            var place = autocomplete2.getPlace();
            if (!place.geometry) {
                return;
            }
            if (place.geometry.viewport) {              

            } else {
                var lat = place.geometry.location.lat();
                var lng = place.geometry.location.lng();
                aclocation2 = [];
                aclocation2.push(lat);
                aclocation2.push(lng);
                address = document.getElementById('endvalue').value;
                map.setCenter(place.geometry.location.lat(), place.geometry.location.lng());
                map.addMarker({
                    lat: place.geometry.location.lat(),
                    lng: place.geometry.location.lng(),
                    infoWindow:{
                    content: '<p >' + address + '</p>'

                    }
                });

            }
            var address = '';
            if (place.address_components) {
                address = [
                  (place.address_components[0] && place.address_components[0].short_name || ''),
                  (place.address_components[1] && place.address_components[1].short_name || ''),
                  (place.address_components[2] && place.address_components[2].short_name || '')
                ].join(' ');

            }
        });
        $("#fcafe").bind("click", function () {
           var lat= document.getElementById('latitude').value;
           var lng = document.getElementById('longitude').value;
           var image = new google.maps.MarkerImage("../PlaceMarkers/Coffee.png");
           $.getJSON('https://api.foursquare.com/v2/venues/search?client_id=4G0ZYJBKXRKRJ5VGLULFCGQPRNJADTJZIHQPE5NRT33WKVMV&client_secret=VU4NZM13SM3AFZ30NDA2U4B1ZYOLKZ5JNQJQKW2RYZXSFKZL&v=20130815&ll=' + lat + ',' + lng + '&query=cafe',
                            function (data) {
                                $.each(data.response.venues, function (i, venues) {
                                    content = '<p>Name: ' + venues.name +
                                        ' Address: ' + venues.location.address +
                                        ' Lat/long: ' + venues.location.lat + ', ' + venues.location.lng + '</p>';
                                 
                                    map.addMarker({
                                        lat: venues.location.lat,
                                        lng: venues.location.lng,
                                        title: venues.name,
                                        icon: image,
                                        infoWindow: {
                                            content: '<p>' + content + '</p>'
                                        }
                                    });
                                });                             
                                map.setCenter(lat, lng);
                                //map.setZoom(15);
                            });
        });
        $("#region").bind("click", function () {
            document.getElementById('latitude').value = '';
            document.getElementById('longitude').value = '';
            var country = $('#Id').val();
            var category = $('#category').val();
            var streetroute = $('#route').val();
            var streetNumber = $('#street_number').val();
            var city = $('#locality').val();
            var region = $('#Idregion').val();
            var latitude = $('#latitude').val();
            var longitude = $('#longitude').val();
            var radius = $('#radius').val();
            squirrel = {
                Lat: latitude,
                Long: longitude,
                Vendore: "",
                ImagePath: 'F',
                Country: country,
                Category: category,
                StreetRoute: streetroute,
                StreetNumber: streetNumber,
                City: city,
                Region: region,
                Radius: radius
            };
            var onEventLaunchSquirrel = new postSquirrel(squirrel);
            onEventLaunchSquirrel.launchSquirrel();

        });
        $("#poi").bind("click", function () {
            var country = $('#countrydb').val();
            var category = $('#category').val();
            var streetroute = $('#route').val();
            var streetNumber = $('#street_number').val();
            var city = $('#locality').val();
            var region = $('#region').val();
            var latitude = $('#latitude').val();
            var longitude = $('#longitude').val();
            var radius = $('#radius').val();
            squirrel = {
                Lat: latitude,
                Long: longitude,
                Vendore: "",
                ImagePath: 'F',
                Country: country,
                Category: category,
                StreetRoute: streetroute,
                StreetNumber: streetNumber,
                City: city,
                Region: region,
                Radius: radius

            };
            var onEventLaunchSquirrel = new postSquirrel(squirrel);
            onEventLaunchSquirrel.launchSquirrel();
        });

        function postSquirrel(squirrel) {
        this.launchSquirrel = function () {
            // build json object
            $.ajax({
                type: "POST",
                url: "/map/PostSquirrel",
                traditional: true,
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(squirrel),
                success: function (data) {
                    $.each(data, function (i, item) {
                        var lat = item.Lat.replace(",", ".");
                        var lng = item.Long.replace(",", ".");
                        var price = item.Prices;
                        var fuelcategory=item.FuelCategories;
                        var pricecontent = "";
                        var fuelcatcontent = "";
                        $.each(fuelcategory, function (index, value) { fuelcatcontent += "<th>" + value + "</th>"; })
                        $.each(price, function (index, value) { pricecontent += "<td>" + value + "</td>"; })
                        content = '<p>' + item.Vendore +
                                           ' Lat/long: ' + item.Lat + ', ' + item.Long + " " + "<br/>" +
                                           "<p>" + item.Adress + "</p>" +
                                           "<table class='table table-hover'><thead><tr>"
                                           + fuelcatcontent
                                           + "</tr></thead>" +
                                           "<tbody><tr>"
                                           + pricecontent
                                           + "</tr></tbody></table>";

                        var image = new google.maps.MarkerImage("../PlaceMarkers/Fuel.png");
                        markers_data.push({
                            lat: lat,
                            lng: lng,
                            title: item.Vendore,
                            icon: image,
                            infoWindow: {
                                content: '<p>' + content + '</p>'
                            }
                        });
                        map.addMarker({
                            lat: lat,
                            lng: lng,
                            title: item.Vendore,
                            icon: image,
                            infoWindow: {
                                content: '<p>' + content + '</p>'
                            }
                        });

                    });              
                    map.setCenter(markers_data[0].lat, markers_data[0].lng);
                    //map.setZoom(15);
                    console.log(data)
                },
                error: function (data) { console.log(data) }
            });}
        }
        $("#gaspoi").bind("click", function () {           
            var category_route = $('#category_route').val();
            var radius_route = $('#radius_route').val();
            squirrel_data[0].Radius = radius_route;
            squirrel_data[0].Category = category_route;
            var onEventLaunchlstSquirrel = new postlstSquirrel(squirrel_data);
            onEventLaunchlstSquirrel.launchlstSquirrel();

        });
        function postlstSquirrel(squirrel_data) {   
            this.launchlstSquirrel = function () {
                //build json object
                $.ajax({
                    type: "POST",
                    url: "@(Url.RouteUrl("PostlstSquirrel"))",
                    traditional: true,
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(squirrel_data),
                    success: function (data) {
                        $.each(data, function (i, item) {
                            var lat = item.Lat.replace(",", ".");
                            var lng = item.Long.replace(",", ".");
                            var price = item.Prices;
                            var fuelcategory = item.FuelCategories;
                            var pricecontent = "";
                            var fuelcatcontent = "";
                            $.each(fuelcategory, function (index, value) { fuelcatcontent += "<th>" + value + "</th>"; })
                            $.each(price, function (index, value) { pricecontent += "<td>" + value + "</td>"; })
                            content = '<p>' + item.Vendore +
                                               ' Lat/long: ' + item.Lat + ', ' + item.Long + " " + "<br/>" +
                                               "<p>" + item.Adress + "</p>" +
                                               "<table class='table table-hover'><thead><tr>"
                                               + fuelcatcontent
                                               + "</tr></thead>" +
                                               "<tbody><tr>"
                                               + pricecontent
                                               + "</tr></tbody></table>";

                            var image = new google.maps.MarkerImage("../PlaceMarkers/Fuel.png");
                            markers_data.push({
                                lat: lat,
                                lng: lng,
                                title: item.Vendore,
                                icon: image,
                                infoWindow: {
                                    content: '<p>' + content + '</p>'
                                }
                            });
                            map.addMarker({
                                lat: lat,
                                lng: lng,
                                title: item.Vendore,
                                icon: image,
                                infoWindow: {
                                    content: '<p>' + content + '</p>'
                                }
                            });

                        });
                        map.setCenter(markers_data[0].lat, markers_data[0].lng);
                       // map.setZoom(15);
                        console.log(data)
                    },
                    error: function (data) { console.log(data) }

                });
            }
        }



        $(document).on('click', '.pan-to-marker', function (e) {
            e.preventDefault();

            var position, lat, lng, $index,marker;

            $index = $(this).data('marker-index');
            position = map.markers[$index].getPosition();

            lat = position.lat();
            lng = position.lng();
            map.markers[$index].infoWindow.setPosition(new google.maps.LatLng(lat+0.001, lng));
            map.markers[$index].infoWindow.open(map.map);
            map.setCenter(lat, lng);
        });
        input = (document.getElementById('pac-input'));
        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.setTypes(['geocode']);
        google.maps.event.addListener(autocomplete, 'place_changed', function () {

            place = autocomplete.getPlace();
            document.getElementById('latitude').value = '';
            document.getElementById('longitude').value = '';
            if (!place.geometry) {
                return;
            }
            if (place.geometry.viewport) {
                map.fitBounds(place.geometry.viewport);

            } else {

                map.setCenter(place.geometry.location.lat(), place.geometry.location.lng());
                document.getElementById('latitude').value = place.geometry.location.lat();
                document.getElementById('longitude').value = place.geometry.location.lng();
              //  map.setZoom(17);
                fillInAddress();
            }        
            // image = new google.maps.MarkerImage(place.icon);
            image = new google.maps.MarkerImage("../PlaceMarkers/Nav.png");
            map.addMarker({
                lat: place.geometry.location.lat(),
                lng: place.geometry.location.lng(),
                icon: image

            });       

            var address = '';
            if (place.address_components) {
                address = [
                  (place.address_components[0] && place.address_components[0].short_name || ''),
                  (place.address_components[1] && place.address_components[1].short_name || ''),
                  (place.address_components[2] && place.address_components[2].short_name || '')
                ].join(' ');

            }
        });
        //setupClickListener('changetype-geocode', ['geocode']);
        // [START region_fillform]
        function fillInAddress() {


            for (var component in componentForm) {
                document.getElementById(component).value = '';
                document.getElementById(component).disabled = false;
            }

            // Get each component of the address from the place details
            // and fill the corresponding field on the form.
            for (var i = 0; i < place.address_components.length; i++) {
                var addressType = place.address_components[i].types[0];

                if (componentForm[addressType]) {
                    var val = place.address_components[i][componentForm[addressType]];
                    document.getElementById(addressType).value = val;
                }
            }
        }
    });

    // [END region_fillform]
    function calcRoute() {
        var start = document.getElementById('startvalue').value;
        var end = document.getElementById('endvalue').value;
        var category_route = $('#category_route').val();
        var radius_route = $('#radius_route').val();        
        var request = {
            origin: start,
            destination: end,
            travelMode: google.maps.DirectionsTravelMode.DRIVING
        };
        squirrel_data = [];
        map.travelRoute({
            origin: aclocation,
            destination: aclocation2,
            travelMode: 'driving',
            step: function (e) {
                $('#instructions').append('<li>' + e.instructions + '</li>');
                $('#instructions li:eq(' + e.step_number + ')').delay(450 * e.step_number).fadeIn(200, function () {
                    map.drawPolyline({
                        path: e.path,
                        strokeColor: '#131540',
                        strokeOpacity: 0.6,
                        strokeWeight: 6
                    });
                });
            }
        });
        directionsService.route(request, function (response, status) {
            if (status == google.maps.DirectionsStatus.OK) {
                var path;
                image = new google.maps.MarkerImage("../PlaceMarkers/waypoint.png");
                var route = response.routes[0];// содержит массив объектов DirectionsRoute(1 маршрут  для заданных исходной точки и пункта назначения)           
                for (var i = 0; i < route.legs.length; i++) {
                   var leg = route.legs[i];//legs[] содержит массив объектов DirectionsLeg каждый из которых содержит информацию об отрезке маршрута между двумя точками на заданном маршруте                 
                    for (var j = 0; j < leg.steps.length; j++) {
                        var step = leg.steps[j];//DirectionsLeg определяет отдельный отрезок пути от исходной точки до пункта назначения в вычисленном маршруте.
                        //steps[] содержит массив объектов DirectionsStep с информацией о каждом шаге на отрезке путешествия.               
                        for (var k = 0; k < step.path.length; k++) {
                            path = step.path[k];//path содержит массив элементов LatLngs, описывающий траекторию шага.
                            routepath.push(path);
                            squirrel = {
                                Lat: path.lat(),
                                Long: path.lng(),
                                Vendore: "",
                                ImagePath: '',
                                Country: '',
                                Category: '',
                                StreetRoute: '',
                                StreetNumber: '',
                                City: '',
                                Region: '',
                                Radius: ''
                            };


                            squirrel_data.push(squirrel);
                            map.addMarker({
                                lat: path.lat(),
                                lng: path.lng(),
                                icon:image,
                                infoWindow: {
                                    content: '<p >' + path.lat() + ' ' + path.lng() + '</p>'

                                }
                            });
                        }
                    }
                }
                directionsDisplay.setDirections(response);               
            }
        });
    }
    function Button1_onclick() {
        calcRoute();
    }
    //конец блока маршрутов
</script>
<!-- /#wrapper -->
<!-- jQuery -->
<script src="~/bower_components/jquery/dist/jquery.min.js"></script>
<!-- Bootstrap Core JavaScript -->
<script src="~/bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
<!-- Metis Menu Plugin JavaScript -->
<script src="~/bower_components/metisMenu/dist/metisMenu.min.js"></script>
<!-- Morris Charts JavaScript -->
<script src="~/bower_components/raphael/raphael-min.js"></script>
<script src="~/bower_components/morrisjs/morris.min.js"></script>
<script src="~/js/morris-data.js"></script>
<!-- Custom Theme JavaScript -->
<script src="~/dist/js/sb-admin-2.js"></script>