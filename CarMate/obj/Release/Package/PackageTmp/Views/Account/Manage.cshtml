@model CarMate.Models.LocalPasswordModel
@{
    ViewBag.Title = Resources.Account.AccountManagement;
}

<div class="container">
    <hgroup>
        <h1>@ViewBag.Title.</h1>
    </hgroup>

    <h3>@ViewBag.StatusMessage</h3>

    <p>@Resources.Account.YouLoggedAs <strong>@User.Identity.Name</strong>.
    </p>

    @if (ViewBag.HasLocalPassword)
    {
        @Html.Partial("_ChangePasswordPartial")
    }
    else
    {
        @Html.Partial("_SetPasswordPartial")
    }

    <section>
        @Html.Action("RemoveExternalLogins")

        <h3>@Resources.Account.AddNewAccount</h3>
        @Html.Action("ExternalLoginsList", new {ReturnUrl = ViewBag.ReturnUrl})
    </section>

    @*@using (Html.BeginForm("Edit", "User"))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)*@

        @*@Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.UserId)*@

        <div class="form-horizontal">
            @*<div class="form-group">
                @Html.Label("UnitDistanceId", "Одометр", htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-3">
                    @Html.DropDownList("UnitDistanceId", null, htmlAttributes: new {@class = "form-control"})
                </div>
            </div>

            <div class="form-group">
                @Html.Label("UnitVolumeId", "Бак", htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-3">
                    @Html.DropDownList("UnitVolumeId", null, htmlAttributes: new {@class = "form-control"})
                </div>
            </div>*@

            <div class="form-group">
                @Html.Label("UnitFuelConsumptionId", Resources.Account.FuelConsumption, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.DropDownList("UnitFuelConsumptionId", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>


            <button id="btSave" onclick=" save() " class="btn btn-primary">@Resources.Global.Save</button>


            <button id="btDeleteAccount" onclick="DeleteAccount()" class="btn btn-danger">Удалить аакаунт</button>
            @*<p>
                <input type="submit" value="Сохранить" class="btn btn-primary"/>
                @Html.ActionLink("Назад", "Details", "User", new { id = Model.UserId }, new { @class = "btn btn-primary" })
            </p>*@
        </div>
    @*}*@

</div>

<script type="text/javascript">
    function save() {
        //var unitDistanceId = $("#UnitDistanceId").val();
        //var unitVolumeId = $("#UnitVolumeId").val();
        var unitFuelConsumptionId = $("#UnitFuelConsumptionId").val();
        //alert(unitFuelConsumptionId);
        //alert(unitDistanceId);
        $.ajax({
            url: '@Url.Action("Edit", "User")',
            dataType: "json",
            type: "POST",
            contentType: 'application/json; charset=utf-8',
            //url: '/api/1/user/buyer_profile/',
            //url: '/api/1/user/buyer_profile/' + User.id() + '/',
            //data: { "carEvents": {} },
            //data: JSON.stringify({ unitDistanceId: unitDistanceId, unitVolumeId: unitVolumeId }),
            data: JSON.stringify({ unitFuelConsumptionId: unitFuelConsumptionId }),
            async: true,
            processData: false,
            cache: false,
            success:
                function(data) {
                    alert(data);
                },
            error: function (xhr, ajaxOptions, thrownError) {
                //alert(xhr.status);
                //alert(thrownError);
                //alert(xhr.responseText);
            }
        });
    }

    function DeleteAccount() {
        $.ajax({
            url: '@Url.Action("DeleteAccount", "Account")',
            dataType: "json",
            type: "POST",
            contentType: 'application/json; charset=utf-8',
            //url: '/api/1/user/buyer_profile/',
            //url: '/api/1/user/buyer_profile/' + User.id() + '/',
            //data: { "carEvents": {} },
            //data: JSON.stringify({ unitDistanceId: unitDistanceId, unitVolumeId: unitVolumeId }),
            async: true,
            processData: false,
            cache: false,
            success:
                function(data) {
                    var url = '@Url.Action("Index", "Home")';
                    window.location.href = url;
                },
            error: function(xhr, ajaxOptions, thrownError) {
                //alert(xhr.status);
                //alert(thrownError);
                //alert(xhr.responseText);
            }
        });
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
